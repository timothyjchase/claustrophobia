{"version":3,"sources":["config/index.js","actions/actionHelpers/index.js","actions/index.js","components/DieImage/index.js","components/GameSummary/DemonWarriorItem/index.js","components/GameSummary/index.js","containers/GameSummaryContainer/index.js","components/EventMessage/index.js","containers/EventMessageContainer/index.js","components/RulesSummaryButton/index.js","components/DemonAISummaryButton/index.js","components/Welcome/index.js","components/PhaseHeader/index.js","components/InitiativePhase/index.js","containers/InitiativePhaseContainer/index.js","components/HumanActionPhase/index.js","containers/HumanActionPhaseContainer/index.js","components/ThreatPhase/ThreatEventStep/index.js","components/ThreatPhase/CheckDemonPlacementStep/index.js","components/ThreatPhase/CheckTrogsPlacementStep/index.js","components/ThreatPhase/SpawnDemonStep/index.js","components/ThreatPhase/SpawnTrogsStep/index.js","components/ThreatPhase/index.js","components/ThreatPhase/CheckTrogsDistanceStep/index.js","containers/ThreatPhaseContainer/index.js","components/DemonActionPhase/index.js","components/PhaseBody/index.js","containers/DemonActionPhaseContainer/index.js","components/GameResultButton/index.js","components/MainMenu/index.js","components/MainApp/index.js","containers/MainAppContainer/index.js","serviceWorker.js","reducer/index.js","store.js","index.js"],"names":["SCENARIOS","THE_SURVIVORS","name","demon","demonLimit","demonSpawnLocation","trogsSpawnLocation","HOLDING_BACK_THE_INVASION","HIT_THEM_WHERE_IT_HURTS","THE_RITUAL","THE_POSSESSED","WHO_DARES_WINS","DEMON_WARRIORS","DEMON_OF_COMBAT","health","movement","combat","defense","rules","DEMON_OF_CRUELTY","DEMON_OF_DESTRUCTION","MASTER_OF_SOULS","POSSESSED_ONE","TOUGH_TROGLODYTE","TROGLODYTE","UNDERGROUND_HUNTER","EVENTS","CAVE_IN","getDescription","state","scenarioKey","phase","CRISIS_OF_FAITH","description","DEFECT","DEMONIC_RAGE","checkRelevent","demonsInPlay","DEMONIC_POSSESSION","PANIC","SUICIDE_ATTACK","trogsInPlay","TERROR","THEY_ARE_LEGION","getResult","toughTrogsInPlay","toughTrogsAdded","TOXIC_FUMES","TRAP","UNDER_THE_SIGN_OF_SATAN","getRandomNumber","min","arguments","length","undefined","max","Math","floor","random","getEventResult","upcomingEvent","eventCount","result","key","Object","objectSpread","drawEvent","_getRandomNumber","ignoreFirst","keys","eventConfig","getCompleteThreatPhase","payload","threatStep","threatDice","trogsFar","trogsSupernaturalSpeed","trogsSharpenedClaws","trogsClose","getEventOrCompleteThreatPhase","_drawEvent","_getCompleteThreatPhase","eventRequired","CHANGE_GAME_STATE","DEMON_DIE_IMAGES","THREAT_DIE_IMAGES","DieImage","_ref","type","value","imageProps","objectWithoutProperties","images","index","react_default","a","createElement","Popup","inverted","trigger","assign","alt","src","concat","DemonWarriorItem","warrior","numberInPlay","List","Item","Content","Button","icon","floated","size","onClick","onRemove","compact","basic","Header","as","Label","circular","horizontal","content","renderHTML","style","paddingLeft","Rating","defaultRating","maxRating","GameSummary","turn","demonDice","warriors","demonWarriorCount","reduce","Segment","padding","Grid","stackable","Row","stretched","Column","width","verticalAlign","components_DieImage","display","height","margin","map","GameSummary_DemonWarriorItem","connect","currentState","current","removeDemon","dispatch","getState","removeToughTrog","removeTrog","oilForYourLamp","components_GameSummary","EventMessage","removeEvent","Message","negative","float","Dropdown","text","error","Menu","direction","components_EventMessage","RulesSummaryButton","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOpen","setState","open","handleClose","_this$props","ButtonComponent","buttonProps","Portal","closeOnTriggerClickk","openOnTriggerClick","onOpen","onClose","Modal","closeOnDimmerClick","Actions","PureComponent","defaultProps","DemonAISummaryButton","color","Subheader","Divider","Welcome","_this2","startGame","options","components_RulesSummaryButton","cursor","components_DemonAISummaryButton","placeholder","search","selection","onChange","event","fluid","Group","vertical","primary","disabled","target","href","Component","PHASES","text2","PhaseHeader","Step","unstackable","phaseConfig","active","Description","InitiativePhase","useAuraOfBlessing","useOilForYourLamp","completeInitiativePhase","components_InitiativePhase","HumanActionPhase","addDemon","placeDemonicMechanismTile","placeTile","completeHumanActionPhase","demonsAdded","trogsAdded","threatRoll","components_HumanActionPhase","ThreatEventStep","completeThreatEventStep","CheckDemonPlacementStep","legalPlacement","completeThreatDemonPlacementStep","Checkbox","label","checked","CheckTrogsPlacementStep","completeThreatTrogsPlacementStep","SpawnDemonStep","scenario","demonName","completeThreatSpawnDemonStep","spawnLocation","SpawnTrogsStep","render","completeThreatSpawnTrogsStep","_this$state","maxTrogs","Input","parseInt","STEPS_CONFIG","CHECK_DEMON_PLACEMENT","CHECK_TROGS_DISTANCE","CheckTrogsDistanceStep","completeThreatTrogsDistanceStep","id","CHECK_TROGS_PLACEMENT","SPAWN_DEMON","SPAWN_TROGS","THREAT_EVENT","ThreatPhase","StepCompoonent","stepProps","trogs","components_ThreatPhase","DemonActionPhase","completeDemonActionPhase","INITIATIVE","InitiativePhaseContainer","HUMAN_ACTION","HumanActionPhaseContainer","THREAT","ThreatPhaseContainer","DEMON_ACTION","components_DemonActionPhase","PhaseBody","BodyComponent","GameOverButton","scenarioName","MainMenu","resetGame","undoLastChange","divProps","GameResultButton","MainApp","Container","maxWidth","background","marginTop","components_MainMenu","position","zIndex","top","left","components_Welcome","components_PhaseHeader","containers_EventMessageContainer","components_PhaseBody","containers_GameSummaryContainer","containers_MainAppContainer","history","components_MainApp","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","initialState","reducer","action","toConsumableArray","slice","middleware","thunk","store","createStore","applyMiddleware","apply","ReactDOM","es","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.503a393d.chunk.js","sourcesContent":["const INITIATIVE_PHASE = 'INITIATIVE'\nconst HUMAN_ACTION_PHASE = 'HUMAN_ACTION'\nconst THREAT_PHASE = 'THREAT'\nconst DEMON_ACTION_PHASE = 'DEMON_ACTION'\n\nconst SCENARIOS = {\n  THE_SURVIVORS: {\n    name: 'The Survivors',\n    demon: 'UNDERGROUND_HUNTER',\n    demonLimit: 2,\n    demonSpawnLocation: `<li>the tile with <strong>Fresh Air</strong></li>\n      <li>the <strong>Exit</strong> tile</li>`,\n    trogsSpawnLocation: `<li>the tile with <strong>Fresh Air</strong></li>\n      <li>the <strong>Exit</strong> tile</li>`,\n  },\n  HOLDING_BACK_THE_INVASION: {\n    name: 'Holding Back The Invasion',\n    demon: 'DEMON_OF_COMBAT',\n    demonLimit: 2,\n  },\n  HIT_THEM_WHERE_IT_HURTS: {\n    name: 'Hit Them Where It Hurts',\n    demon: 'MASTER_OF_SOULS',\n    demonLimit: 0,\n  },\n  THE_RITUAL: {\n    name: 'The Ritual',\n    demon: 'DEMON_OF_CRUELTY',\n    demonLimit: 2,\n    demonSpawnLocation: `<li>a path to the Pentacle Room with the <strong>fewest</strong> Human warriors</li>`,\n    trogsSpawnLocation: `<li>a path to the Pentacle Room with a <strong>Seal of Protection</strong></li>\n    <li>a path to the Pentacle Room with the <strong>fewest</strong> Human warriors</li>`,\n  },\n  THE_POSSESSED: {\n    name: 'The Possessed',\n    demon: 'POSSESSED_ONE',\n    demonLimit: 0,\n  },\n  WHO_DARES_WINS: {\n    name: 'Who Dares, Wins',\n    demon: 'DEMON_OF_DESTRUCTION',\n    demonLimit: 2,\n  },\n}\n\nconst DEMON_WARRIORS = {\n  DEMON_OF_COMBAT: {\n    name: 'Demon of Combat',\n    health: 3,\n    movement: 1,\n    combat: 4,\n    defense: 4,\n    rules: `<strong>Impressive</strong> and <strong>Bodyguard</strong>`,\n  },\n  DEMON_OF_CRUELTY: {\n    name: 'Demon of Cruelty',\n    health: 3,\n    movement: 1,\n    combat: 0,\n    defense: 4,\n    rules: `All Troglodytes are <strong>Frantic</strong>.<br />\n        Add 1 to Threat Die at start of Threat phase.`,\n  },\n  DEMON_OF_DESTRUCTION: {\n    name: 'Demon of Desctruction',\n    health: 4,\n    movement: 2,\n    combat: 1,\n    defense: 4,\n    rules: `Gain <strong>+3 CBT</strong> when sharing a tile with 2 or more Human\n      warriors.`,\n  },\n  MASTER_OF_SOULS: {\n    name: 'Master of Souls',\n    health: 10,\n    movement: 0,\n    combat: 2,\n    defense: 4,\n    rules: `<strong>Blessed Hammer</strong> only causes 2 wounds per hit.<br />\n        <strong>Blunderbuss</strong> cannot cause any wounds in ranged combat.`,\n  },\n  POSSESSED_ONE: {\n    name: 'Possessed One',\n    health: 4,\n    movement: 2,\n    combat: 2,\n    defense: 4,\n    rules: `<strong>Blessed Hammer</strong> only causes 2 wounds per hit.<br />\n        All Troglodytes on the same tile are <strong>Bodyguards</strong>.<br />\n        Becomes a Human warrior once exorcised (defeated).`,\n  },\n  TOUGH_TROGLODYTE: {\n    name: 'Tough Troglodyte',\n    health: 1,\n    movement: 2,\n    combat: 1,\n    defense: 5,\n    rules: `This Troglodyte is <strong>Frantic</strong>.`,\n  },\n  TROGLODYTE: {\n    name: 'Troglodyte',\n    health: 1,\n    movement: 1,\n    combat: 1,\n    defense: 3,\n  },\n  UNDERGROUND_HUNTER: {\n    name: 'Underground Hunter',\n    health: 4,\n    movement: 2,\n    combat: 1,\n    defense: 4,\n    rules: `Gain <strong>+1 CBT</strong> per Line of Action canclled on the\n      target.`,\n  },\n}\n\nconst EVENTS = {\n  CAVE_IN: {\n    name: 'Cave-In',\n    getDescription: state => {\n      if (state.scenarioKey === 'THE_SURVIVORS') {\n        return `Place a cave-in token on the tile opening with Fresh Air.\n          If the Exit tile is already in play, place the token on an opening of\n          the Exit tile that is connected to another tile.<br><br>\n          Until the cave-in is cleared, no warrior can cross this opening.<br><br>\n          Clearing the cave-in requires a combat action with at least CBT 2 from\n          a tile adjacent to the blocked opening. Remove the token once the\n          cave-in is cleared.`\n      }\n      return `Place a cave-in token on a tile opening between\n        Human warriors on adjacent tiles. Ignore this event, if there are no\n        Human warriors on adjacent tiles.<br><br>\n        Until the cave-in is cleared, no warrior can cross this opening.<br><br>\n        Clearing the cave-in requires a combat action with at least CBT 2 from\n        a tile adjacent to the blocked opening. Remove the token once the\n        cave-in is cleared.`\n    },\n    phase: THREAT_PHASE,\n  },\n  CRISIS_OF_FAITH: {\n    name: 'Crisis of Faith',\n    description: 'Gifts may not be played this turn.',\n    phase: INITIATIVE_PHASE,\n  },\n  DEFECT: {\n    name: 'Defect',\n    description: 'Discard an Object card of your choice.',\n    phase: THREAT_PHASE,\n  },\n  DEMONIC_RAGE: {\n    name: 'Demonic Rage',\n    description: 'The Demon is <strong>Frantic</strong>.',\n    phase: THREAT_PHASE,\n    checkRelevent: state => state.demonsInPlay > 0,\n  },\n  DEMONIC_POSSESSION: {\n    name: 'Demonic Possession',\n    description: `The Condemned warrior with the highest CBT sharing a tile\n      with at least 1 other Human warrior attacks a Human warrior on that\n      tile (if multiple, choose lowest DEF then most wounds).\n      He cannot use a Grenade or his Bodyguard Talent.`,\n    phase: THREAT_PHASE,\n  },\n  PANIC: {\n    name: 'Panic!',\n    description: `Assign Action Dice to Human warriors randomly.<br><br>\n      If the assigned Line of Action is cancelled, the Action Dice may be\n      rerolled once per Human warrior.`,\n    phase: INITIATIVE_PHASE,\n  },\n  SUICIDE_ATTACK: {\n    name: 'Suicide Attack',\n    description: `Choose 1 Troglodyte attacking this phase.\n      It will gain <strong>+2 CBT</strong> for the attack.<br><br>\n      Then remove the Troglodyte from the game.`,\n    phase: DEMON_ACTION_PHASE,\n    checkRelevent: state => state.trogsInPlay > 0,\n  },\n  TERROR: {\n    name: 'Terror',\n    getDescription: state => {\n      if (state.scenarioKey === 'THE_SURVIVORS') {\n        return `Pick a Human warrior closest to the tile with Fresh Air (or\n          closest to the Exit tile if it has already been placed) and move him\n          to an adjacent tile away from the Fresh Air (or Exit tile),\n          connected by an opening, without exceeding the tile limit.\n          Ignore the Blocking rule`\n      }\n      return `Using a die, pick a random Human warrior and move him to a\n        random adjacent tile via an opening, without exceeding the tile limit.\n        Ignore the Blocking rule.`\n    },\n    phase: THREAT_PHASE,\n  },\n  THEY_ARE_LEGION: {\n    name: 'They Are Legion',\n    description: `All Troglodytes gain +1 DEF during this phase.`,\n    phase: HUMAN_ACTION_PHASE,\n  },\n  TOUGH_TROGLODYTE: {\n    name: 'Tough Troglodyte',\n    getDescription: state => {\n      if (state.scenarioKey === 'THE_SURVIVORS') {\n        return `Place a Tough Troglodyte on the tile with the Fresh Air (or\n          closest to the Exit tile if it has already been placed).<br><br>\n          This Troglodyte must be considered individually during combat\n          (like a Demon). It is represented by placing the relevant token next\n          to a regular Troglodyte miniature.`\n      }\n      return `Place a Tough Troglodyte on the tile with the most Human\n        warriors.<br><br>\n        This Troglodyte must be considered individually during combat\n        (like a Demon). It is represented by placing the relevant token next\n        to a regular Troglodyte miniature.`\n    },\n    phase: THREAT_PHASE,\n    checkRelevent: state => state.scenarioKey !== 'THE_RITUAL',\n    getResult: state => ({\n      toughTrogsInPlay: state.toughTrogsInPlay + 1,\n      toughTrogsAdded: state.toughTrogsAdded + 1,\n    }),\n  },\n  TOXIC_FUMES: {\n    name: 'Toxic Fumes',\n    description: `Roll a die for each Human warrior on the tile with the most\n      Human warriors. A Human warrior suffer a hit on a die result of 3 or\n      more.`,\n    phase: THREAT_PHASE,\n  },\n  TRAP: {\n    name: 'Trap',\n    description: `Apply 1 hit to the Human warrior with the most wounds\n      (you may choose if tied).`,\n    phase: THREAT_PHASE,\n  },\n  UNDER_THE_SIGN_OF_SATAN: {\n    name: 'Under the Sign of Satan',\n    description: `The Demon gains <strong>+1 MVT</strong>,\n      <strong>+1 CBT</strong> and <strong>+1 DEF</strong> until the beginning\n      of the next Threat Phase. Place the appropriate token to track this.`,\n    phase: THREAT_PHASE,\n    checkRelevent: state => state.demonsInPlay > 0,\n  },\n}\n\nexport {\n  INITIATIVE_PHASE,\n  HUMAN_ACTION_PHASE,\n  THREAT_PHASE,\n  DEMON_ACTION_PHASE,\n  SCENARIOS,\n  DEMON_WARRIORS,\n  EVENTS,\n}\n","import { THREAT_PHASE, DEMON_ACTION_PHASE, EVENTS } from '../../config'\n\n// Threat phase steps\nconst THREAT_EVENT_STEP = 'THREAT_EVENT'\n\nconst getRandomNumber = (min = 1, max = 6) =>\n  Math.floor(Math.random() * max) + min\n\nconst getEventResult = (state, phase) => {\n  const { upcomingEvent, eventCount } = state\n  if (upcomingEvent && upcomingEvent.phase === phase) {\n    let result = {}\n    if (EVENTS[upcomingEvent.key].getResult) {\n      result = EVENTS[upcomingEvent.key].getResult(state)\n    }\n    return {\n      upcomingEvent: null,\n      eventCount: eventCount + 1,\n      ...result,\n    }\n  }\n  return {}\n}\n\nconst drawEvent = (\n  state,\n  _getRandomNumber = getRandomNumber,\n  ignoreFirst = false,\n) => {\n  const keys = Object.keys(EVENTS)\n  const key = keys[_getRandomNumber(0, keys.length - 1)]\n  const eventConfig = EVENTS[key]\n  if (\n    (eventConfig.checkRelevent && !eventConfig.checkRelevent(state)) ||\n    ignoreFirst\n  ) {\n    return drawEvent(state, _getRandomNumber)\n  }\n  return {\n    key,\n    name: eventConfig.name,\n    description: eventConfig.getDescription\n      ? eventConfig.getDescription(state)\n      : eventConfig.description,\n    phase: eventConfig.phase,\n  }\n}\n\nconst getCompleteThreatPhase = (state, _getRandomNumber = getRandomNumber) => {\n  const payload = {\n    phase: DEMON_ACTION_PHASE,\n    threatStep: null,\n    threatDice: state.threatDice,\n    ...getEventResult(state, THREAT_PHASE),\n  }\n  if (payload.threatDice >= 1 && state.trogsFar) {\n    payload.trogsSupernaturalSpeed = true\n    payload.threatDice -= 2\n  }\n  if (state.scenarioKey === 'THE_RITUAL' && state.demonsInPlay) {\n    payload.trogsSharpenedClaws = true\n  } else if (payload.threatDice >= 1 && state.trogsClose) {\n    payload.trogsSharpenedClaws = true\n    payload.threatDice -= 1\n  }\n  if (payload.threatDice < 1) {\n    payload.threatDice = _getRandomNumber()\n  }\n  return payload\n}\n\nconst getEventOrCompleteThreatPhase = (\n  state,\n  _drawEvent = drawEvent,\n  _getCompleteThreatPhase = getCompleteThreatPhase,\n) => {\n  let upcomingEvent\n  if (state.eventRequired) {\n    upcomingEvent = _drawEvent(state)\n  }\n  if (upcomingEvent && upcomingEvent.phase === THREAT_PHASE) {\n    return {\n      threatStep: THREAT_EVENT_STEP,\n      eventRequired: false,\n      upcomingEvent,\n    }\n  }\n  return _getCompleteThreatPhase(state)\n}\n\nexport {\n  getRandomNumber,\n  getEventResult,\n  drawEvent,\n  getCompleteThreatPhase,\n  getEventOrCompleteThreatPhase,\n}\n","import {\n  INITIATIVE_PHASE,\n  HUMAN_ACTION_PHASE,\n  THREAT_PHASE,\n  DEMON_ACTION_PHASE,\n  SCENARIOS,\n} from '../config'\nimport {\n  getRandomNumber,\n  getEventResult,\n  getCompleteThreatPhase,\n  getEventOrCompleteThreatPhase,\n} from './actionHelpers'\n\n// Threat phase steps\nconst CHECK_DEMON_PLACEMENT_STEP = 'CHECK_DEMON_PLACEMENT'\nconst CHECK_TROGS_PLACEMENT_STEP = 'CHECK_TROGS_PLACEMENT'\nconst SPAWN_DEMON_STEP = 'SPAWN_DEMON'\nconst SPAWN_TROGS_STEP = 'SPAWN_TROGS'\nconst CHECK_TROGS_DISTANCE_STEP = 'CHECK_TROGS_DISTANCE'\n\n// Dispatch event types\nconst CHANGE_GAME_STATE = 'CHANGE_GAME_STATE'\nconst RESET_GAME_STATE = 'RESET_GAME_STATE'\nconst UNDO_LAST_CHANGE = 'UNDO_LAST_CHANGE'\n\nconst startGame = scenarioKey => dispatch => {\n  dispatch({\n    type: CHANGE_GAME_STATE,\n    payload: { scenarioKey, turn: 1, phase: INITIATIVE_PHASE },\n  })\n}\n\nconst resetGame = () => dispatch => {\n  dispatch({\n    type: RESET_GAME_STATE,\n  })\n}\n\nconst undoLastChange = () => (dispatch, getState) => {\n  const { history } = getState()\n  if (history.length) {\n    dispatch({\n      type: UNDO_LAST_CHANGE,\n    })\n  }\n}\n\nconst completeInitiativePhase = () => (dispatch, getState) => {\n  const state = getState().current\n  dispatch({\n    type: CHANGE_GAME_STATE,\n    payload: {\n      phase: HUMAN_ACTION_PHASE,\n      ...getEventResult(state, INITIATIVE_PHASE),\n    },\n  })\n}\n\nconst completeHumanActionPhase = () => (dispatch, getState) => {\n  const state = getState().current\n  const payload = {\n    phase: THREAT_PHASE,\n    threatRoll: getRandomNumber(),\n    threatDice: state.threatDice,\n    ...getEventResult(state, HUMAN_ACTION_PHASE),\n  }\n  // Add to Threat Die for The Ritual scenario\n  if (\n    state.scenarioKey === 'THE_RITUAL' &&\n    state.demonsInPlay &&\n    state.threatDice < 6\n  ) {\n    payload.threatDice = state.threatDice + 1\n  }\n  // Check for adding a Demon\n  if (\n    !state.demonsInPlay &&\n    state.demonsAdded < (SCENARIOS[state.scenarioKey] || {}).demonLimit\n  ) {\n    if (payload.threatRoll > state.demonDice) {\n      payload.threatStep = CHECK_DEMON_PLACEMENT_STEP\n    } else {\n      payload.demonDice = state.demonDice - 1\n    }\n  }\n  // Check for adding Trogs\n  if (!payload.threatStep && state.trogsInPlay < payload.threatDice) {\n    payload.threatStep = CHECK_TROGS_PLACEMENT_STEP\n  }\n  // Default next step\n  if (!payload.threatStep) {\n    payload.threatStep = CHECK_TROGS_DISTANCE_STEP\n  }\n\n  dispatch({\n    type: CHANGE_GAME_STATE,\n    payload,\n  })\n}\n\nconst completeThreatDemonPlacementStep = legalPlacement => dispatch => {\n  dispatch({\n    type: CHANGE_GAME_STATE,\n    payload: {\n      legalPlacement,\n      threatStep: SPAWN_DEMON_STEP,\n    },\n  })\n}\n\nconst completeThreatTrogsPlacementStep = legalPlacement => dispatch => {\n  dispatch({\n    type: CHANGE_GAME_STATE,\n    payload: {\n      legalPlacement,\n      threatStep: SPAWN_TROGS_STEP,\n    },\n  })\n}\n\nconst completeThreatSpawnDemonStep = () => (dispatch, getState) => {\n  const state = getState().current\n  const demonsInPlay = state.demonsInPlay + 1\n  const demonsAdded = state.demonsAdded + 1\n  const demonDice = 6\n  dispatch({\n    type: CHANGE_GAME_STATE,\n    payload: {\n      demonsInPlay,\n      demonsAdded,\n      demonDice,\n      ...getEventOrCompleteThreatPhase({\n        ...state,\n        demonsInPlay,\n        demonsAdded,\n        demonDice,\n      }),\n    },\n  })\n}\n\nconst completeThreatSpawnTrogsStep = trogs => (dispatch, getState) => {\n  const state = getState().current\n  dispatch({\n    type: CHANGE_GAME_STATE,\n    payload: {\n      threatDice: Math.max(state.threatDice - 1, 1),\n      trogsInPlay: state.trogsInPlay + trogs,\n      trogsAdded: state.trogsAdded + trogs,\n      threatStep: CHECK_TROGS_DISTANCE_STEP,\n    },\n  })\n}\n\nconst completeThreatTrogsDistanceStep = (trogsFar, trogsClose) => (\n  dispatch,\n  getState,\n) => {\n  const state = getState().current\n  dispatch({\n    type: CHANGE_GAME_STATE,\n    payload: {\n      trogsFar,\n      trogsClose,\n      ...getEventOrCompleteThreatPhase({ ...state, trogsFar, trogsClose }),\n    },\n  })\n}\n\nconst completeThreatEventStep = () => (dispatch, getState) => {\n  const state = getState().current\n  dispatch({\n    type: CHANGE_GAME_STATE,\n    payload: getCompleteThreatPhase(state),\n  })\n}\n\nconst completeDemonActionPhase = () => (dispatch, getState) => {\n  const state = getState().current\n  const payload = {\n    turn: state.turn + 1,\n    phase: INITIATIVE_PHASE,\n    legalPlacement: false,\n    trogsFar: false,\n    trogsClose: false,\n    trogsSupernaturalSpeed: false,\n    trogsSharpenedClaws: false,\n    oilForYourLamp: false,\n    ...getEventResult(state, DEMON_ACTION_PHASE),\n  }\n  dispatch({\n    type: CHANGE_GAME_STATE,\n    payload,\n  })\n}\n\nconst removeEvent = () => dispatch => {\n  dispatch({\n    type: CHANGE_GAME_STATE,\n    payload: {\n      upcomingEvent: null,\n    },\n  })\n}\n\nconst addDemon = () => (dispatch, getState) => {\n  const state = getState().current\n  dispatch({\n    type: CHANGE_GAME_STATE,\n    payload: {\n      demonsInPlay: state.demonsInPlay + 1,\n      demonsAdded: state.demonsAdded + 1,\n    },\n  })\n}\n\nconst removeDemon = () => (dispatch, getState) => {\n  const state = getState().current\n  dispatch({\n    type: CHANGE_GAME_STATE,\n    payload: {\n      demonsInPlay: state.demonsInPlay - 1,\n    },\n  })\n}\n\nconst removeTrog = () => (dispatch, getState) => {\n  const state = getState().current\n  const payload = { trogsInPlay: state.trogsInPlay - 1 }\n  if (\n    !state.oilForYourLamp &&\n    getRandomNumber(1, state.trogsInPlay) === state.trogsInPlay\n  ) {\n    payload.eventRequired = true\n  }\n  dispatch({\n    type: CHANGE_GAME_STATE,\n    payload,\n  })\n}\n\nconst removeToughTrog = () => (dispatch, getState) => {\n  const state = getState().current\n  dispatch({\n    type: CHANGE_GAME_STATE,\n    payload: {\n      toughTrogsInPlay: state.toughTrogsInPlay - 1,\n    },\n  })\n}\n\nconst useAuraOfBlessing = () => (dispatch, getState) => {\n  const state = getState().current\n  dispatch({\n    type: CHANGE_GAME_STATE,\n    payload: {\n      threatDice: Math.max(0, state.threatDice - 2),\n    },\n  })\n}\n\nconst useOilForYourLamp = () => dispatch => {\n  dispatch({\n    type: CHANGE_GAME_STATE,\n    payload: {\n      oilForYourLamp: true,\n    },\n  })\n}\n\nconst placeDemonicMechanismTile = () => (dispatch, getState) => {\n  const state = getState().current\n  dispatch({\n    type: CHANGE_GAME_STATE,\n    payload: {\n      threatDice: Math.min(6, state.threatDice + 2),\n    },\n  })\n}\n\nconst placeTile = () => (dispatch, getState) => {\n  const state = getState().current\n  if (\n    state.scenarioKey === 'HIT_THEM_WHERE_IT_HURTS' &&\n    state.threatDice >= 3\n  ) {\n    dispatch({\n      type: CHANGE_GAME_STATE,\n      payload: {\n        threatDice: Math.max(0, state.threatDice - 2),\n        trogsInPlay: state.trogsInPlay + 2,\n        trogsAdded: state.trogsAdded + 2,\n      },\n    })\n  }\n}\n\nexport {\n  CHANGE_GAME_STATE,\n  RESET_GAME_STATE,\n  UNDO_LAST_CHANGE,\n  startGame,\n  resetGame,\n  undoLastChange,\n  completeInitiativePhase,\n  completeHumanActionPhase,\n  completeThreatDemonPlacementStep,\n  completeThreatTrogsPlacementStep,\n  completeThreatSpawnDemonStep,\n  completeThreatSpawnTrogsStep,\n  completeThreatTrogsDistanceStep,\n  completeThreatEventStep,\n  completeDemonActionPhase,\n  removeEvent,\n  addDemon,\n  removeDemon,\n  removeTrog,\n  removeToughTrog,\n  useAuraOfBlessing,\n  useOilForYourLamp,\n  placeDemonicMechanismTile,\n  placeTile,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Popup } from 'semantic-ui-react'\n\nconst DEMON_DIE_IMAGES = [\n  `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\\nf2M+B/0LlfKcJGHxgnkAAAAASUVORK5CYII=`,\n  `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\\nBFN0xijcWoUAAAAASUVORK5CYII=`,\n  `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`,\n  `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`,\n  `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\\nYII=`,\n  `iVBORw0KGgoAAAANSUhEUgAAAHgAAAB4CAYAAAA5ZDbSAAAABmJLR0QAIgCFANAjb8ykAAAACXBI\\nWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4goXEhsYtd5DfAAAEPxJREFUeNrtnXlwVFW+xz/39pqE\\ndPatIQsQFgcz6PCeL8BEEBd0mBlcqBqgQIcZLUZmcORRCOVCITIFjiiWwwwzMK5YyAPfIAqWDuOC\\njhAoUFQUI8SQhHQg6exLJ+nbfd8f6cbAC6Hv7XsbbtPfqlSlKznn1+f3veec3++c3+93BS6CUqdT\\nAMxAITAVuBW4HogL/IsfkAkNwkU+nw9ZQd+hyBQ07DdSMPXR857Az5tAJeAtdrlkJQo/n9xk4L+A\\nJ4D/DCjFFyA8qKi2gHChH3IcgBjG4HzAKaAbaAG6zvu7H0gHMgBbP/KTB+hbAtpDeMiCsADeCJMr\\nB8Yl9iE7qPvDwFPAe8Uul1sxwaVO50RgMXAH0ANYieFyxGHgv4tdro/6+6PYz3JMqdO5EPjfALlS\\njNzLGuOAdwOcXXwGlzqd64Hf9Fn7YzAG/MDiYpfr2QsSXOp0PgSsDnPfjOHSYjawNWh8ieftuY/E\\nyDU8NgKjztmDA9byyoDVG4OxMQjYWOp0igBiwLCaCEyJ6SZqUALcEpzBJuBxAzn+MYSG9QBCqdM5\\nBjga00d0zmQRmBGbvVGLu830ni0LevRuyczEPmwYgijia2+n44svYioH4seMwZycjCxJdFVU4K2r\\n00vULWbgWq16M6elkThuHBkzZ5IydWq//+M5cYKGN96gfvt2vG43cldXVJMp2GxYnU7Spk0jY9Ys\\n7AUF/f5f8/vvc2bzZtoOHsTX2gp+vxbic4VSpzPs5dmUnEzyDTfg/N3viB89OqQ2sixz5vnnOfPy\\ny3R9911UkmsfPpzMuXPJmjMHMS4upDae48dxbdhA0+7d+Nrbw3/AwiXYVlBA7kMPkTZ9uqr2Xd99\\nR/WaNTTu3h1V5KbdeSfOBQuIv+oqVe3db7xB9erV9Jw6Fd7kuzcxcbnaPdiWn8+wp58m5aab1C/r\\nKSkklZTQU1ODp6wsKsjNmD2b/BUrsA0Zon6fHj2ahKuvpvm99/B7PKr7Efn+TleZAZWVRcHq1TjG\\njw9/705OZujatThKSow/c++4g7xHHsGclBR2X47x4xm1eXNYfQTPnRXt6ILZTPqMGSRPmqSZYkzx\\n8QxdswaTBoq5lHtuzvz5mJOTNetz0NixDFm2LGyCFcE6eDB5Dz+svYIKCsiZP9+Y7JpMpE2fTkJR\\nkeZdD164EFtentJm59wmmZW0zLn/ft305Fy4EFNiouH4teXmkjlnjm795z/xhNImrX0JlkKe8nY7\\nmbNm6ec3iiIZOvavz5cWGHTttVizsnQTkTx5Mub0dCVNPH0JDtlMS77xRgSzWVd9ZfziF8bi12xW\\n7SaGvN7KMum3366kSWZfgk8qMST0RtyIEcaawaKoZo9UvLIplCH2JTjkcFDHj38ckSXPSCQLokj8\\nqFH6yjCZGDRunP5WtGAyRWxWxBC+7sW+JnVIe0FPT0QGI0tSjNHzdeL1qiY4ZM/cU14ekSWvKwJy\\ntDSAvA0N+srw++mqqlJNcH7IBEfgvLhHv/tRfeD3638jplKG4o2u4c03ddeXe/t2Yy2dkkTDW2/p\\nK8Pno3HXLv0J9rW00Lpvn66DqduyxXAzuPWTT/Rd1VTetqkyVatXr9ZtII27d9N98iRGQ3d1NXWv\\nvaZb/1WrVqlzRtQ06vz6a9z/+Ifmg/B1dlL95JOGtHD9HR3Ub92qi7HV8u9/0/Tuu5Ej2N/VhWv9\\neroqKjS1RE89+aSmfUYa7YcOcXrTJmRZuyDVntpavlu0SHX7YERHD2BX0lBqaMBTVoZjwgTMjvAy\\nXmS/n9oNG6j961/B4P5v+xdfIJrNJF53Xdh9dVVUUP773+P55pvIExzcdzo+/xxHSUlYJLuefZaa\\nZ56J2CGKrpAk2vbvR5blsKJdPOXlVCxZQtuBA+GdKZQ6ncFSBqpDKSyZmeQuW6b4FsjrdnP8/vtp\\nKy3VKkz0soFgNpMwdiyFGzZgGzxYmSu6cyeVK1aEGy9dB2RqQnAQcSNGkL9yJYnjxyNaLGf3IkEQ\\nzvm9+9QpXH/5C3Uvv0y0Q7BYSJ8xA+cDD2DPy+tXJ8HPTf/8JzXr1mmVIHASKAgS3AloFkZhSkwk\\necoU7MOHY8vP781s6Oig48gR2j//HM+xY1yJSCgqIn7MGBKKijA5HMg+H91VVXhOnKB5z56woicH\\nItjH99GVAjFEC04CBX3vg2PkRhfOBt3JQEdMH9G3I/Q96IjN3uhDel+CY4g+iDGCrxSWY4he6Bbg\\nLNhsWNLSMKem9pp0Xi89NTWa5LwaGabERKzZ2Yh2O7IsIzU14a2v1+2YVnOCHSUlJE2aRMKYMZgS\\nE8+mociShLe+Hm9dHW0HD+J+/XX8UZ7df5bUQYNI/elPcZSUYElPx5KWhmCxAOBra0NqbcVTVkbz\\nnj2aB1NodlSZUFRE3ooVxI0ciTkpacAQT19HB1JjI2c2b6b2z3+OanJzFiwgY+ZMrNnZmBISLuy0\\n+v1ITU14yso49fTTvefzlwvBuY8+SvavfoVosynzxCWJzmPHOD5/Pt2VlVFFrNXpZMSmTQy65hrF\\nbX0dHZzeuJGa554Le+kO67oQUWToU0+RPW+eqnwlQRSxZmWRNGkSraWlSG53VJBry8vj6l27iFOZ\\n5iNarTjGj0cwm2k/dCisGHHVBAtWK3kPP0z2L38ZtkIsqakM+tGPaN2/H6mpydDk2gsLGb15s+Ir\\nwv6QeN11vQF9paWgMkpEnZskCKRNn65psnZCURF5jzyCOMA+ddkbU8nJ5K9ciX3oUM36HLxoEWk/\\n+1lk/WBLejpDlizRXEEpU6eGNZhLjbSf/1zTshZBFKxefdbdjAjBGTNnarIE9WuwLVume/6xHrBk\\nZZE1d64+vmxSEkMWL44cwdn33aefojIySLntNsMRHD96NPE/+IF+q8Odd571nXUlOGHsWCxpaboq\\nK/2uuwxFrmA2k3LrrbrKEG02Um65RZEXqorg1GnTdFdYys03G2v6ms0k33CDvg+RxUKSMhkuVQRb\\ns7N115fs9xuqXpYQ2Fr0FSJgUVaExauKYFtubmQOC3Qy4vRZP0VEu11nfgWsOTkRMLKECAV/CLEg\\nEy10opjgzq+/jshYOg1UmFT2+/E2NuorQ5bpOnFCf4K9kTgvlmVj5SjJMpLOBBO4bVJLcMgpfe4d\\nO3TXl/v11w21csqSROPbb1+WMoIEd4baoLuiAs/x47oOpt5gJRzw+Wh+7z1dRUiNjUqrCJwTdKeo\\nhFrNc8/pNpCOL7+kbf9+w9k/XeXlNO/dq1v/tZs2KT6y6EuwotzP5vffp+3QIV0GUvWHPxjSwJWa\\nmqh/7TX83d3aPzwnT3LmhReUNhvUl2BFFo2vuZlTa9dqnSxF7d/+RtvBg4b1Yhp379alCtHx++5T\\nVQStL8FfKW3Y+vHHVK1apdkT2/juu7jWr0fWYQZEDH4/lY89pulDemLBAjrDyMYMEqzqnO3MSy9R\\ns24dUltbWINo3ruXioce0t/ViIS91dbGN7Nn037kCHIYSe3+7m4qli6lYedO1dEc8H3ITjwqX+Pe\\ndvAgktuNdcgQrJmZin3qhh07qFi6FJ/BQ3XOd2kadu7EnJKCLTcXU4jvTDpraH71FdWrVuHeti3s\\n7xKMqqwCwoozsebkkDFrFslTphA/Zgyi9cLPS3dNDa379tH41lu6uxeXGsk33kjqtGk4JkwY8Bxf\\n9vlo/+wzWvbuxb1jB90aVRsKEvwxMFmLDm35+cQVFhJ/1VW9szonB0EQ8Hk8eMrK6K6uxvPtt3Qc\\nPQo+H1cCBIuFuFGjSLj6aqyDBxNXWIgpIQHZ58NbV0dXZSWeb789qx9NZQcIrgWGaNqzyYRotSIE\\nY6X9fvydnVd8mWDBYkGMi0MwmZBlGbmnpzfDQ6ciNMHgJ+1fc+Lz9bpRGrtSht+fvV58Kl2ecKzo\\nGKIUiiu+x2BMguNjqohugq0xVUQ3wTHECI7BiNA8R0SwWLAPHUrK1KnYCwuJGzYMBAFfezvthw/T\\nfuQIbaWl+Do7r5iDDkwmRLudpOuvJ6GoiIRrrsGclIQsSXRXVtJZVkbTO+/QfepUbz6whvWmgwcd\\nYb/typyejmPiRIYsWnTRt5b5PR7OvPoqda+8QldlZfQSLQjEjRpF+l13kTVv3kXPpDu+/JLTf/87\\nzR98gKRR5XhNCE6aMgXnb3+Lo7hYUTt/Vxen1q6lfts2zQZ02SyNqamkz5jBkMWLMQ0apKht+6ef\\nUv3HP/aG6IR5whW8TVK9F2fecw9D16xRlc0umM0kXX89ttxc2g4cwN/ZGTXkDlu7luxf/3rAS5cL\\nwZqTQ8rNNyO53XQePXrpCM6cM4e8xx7DrPAJPR/xI0diHzqUlo8+MnzlHXNaGsPWrVOaKPb/rd/A\\nnt1TWxtWLHqQWMVadUyYQN7y5QNWjlGClKlTGfzggwhWA7vkJhO5y5aRctNN2rg4cXEMf/bZsNJS\\ngwQripMxJSXhfPBBzcgNIvvee0n44Q8Ny2/ylCm6pL6OUB5RGZ4f7CguJmniRF2UlLd8uSHzkswp\\nKWTOmaO4lFQosBcUkDVvXuQIHrJsmS5KkmWZxHHjSBg71nAE2woKNFua+4Nz4cLIEGwfPpz4kSN1\\ncht7Z26WBqWZIr33pkydqvsKoebt64oJjkT2fepPfmKs8wyzmeTJk/WVYTKRpEKG8hlcWKi7wsT4\\n+O9DfYxAsCBgy8/XWSki9ry8CBCsYZGvATZj7AUFBprCQtiv9wvpIYoEwZFUWgwaTHylDaTm5oiQ\\n62tpibFzvu5bW/UnuOPIEf1XaEmip7bWMIqX/X46w3hDaEgyfD5Vb4wTlRId7tswLxcZmsLn0+p9\\ngwMSrFCG1JfYkOOi2w4f1n2Zdhssw1+WJF3SRs+HQhmn1RlZPh+1Gzfqt8+0tRmuRgeAp6wsrDTP\\niz7027YpzRGWVFvRda+8otssrjZohn+Py0Xdq6/qtsdXPfFEZKzooCVduWKF5gNp+eQT6jVImbxU\\naNi1i+YPP9S834olS9S8jsik3g+WZRrffpszL72k3RJ34gSVy5cbOsNfcrupeeYZujRK/QSo27KF\\n+q1b1TTNgDAiOmSvl9YDB7Ckp5NQVBQeueXllD/wAJ1ffYXR0VNbS/unn5I0eTJmhwNZls9eoijF\\n6RdfpOrxx9VmZJqDBD9Ob0SHWQ3JwTAbx8SJqgbSum8f5QsXRtVbwb2nT9Py4Ye9ucAqYtX8Xi/V\\na9bgWr8+7EI3QqnTGX4QriBgHzaM/JUrQ75VkVpaqFq1ivotW4hWCDYbabffTu7SpVizskKzQwLF\\nbcINtutLsA8Nz6TthYVk3X03qdOmYXI4zjlTlnt6aD9yBPf27TREoCTiZQOTidTbbiNz7lwSiop6\\nS/P30YvU2Ejzv/7F6RdeUFVw9GIE7wH0CUUQRWz5+b0lHDo78Z4+TQxgzsjo3Z99PrqrqnTL7geO\\nmYEDuhHs92tWTCSaINXXI9XXR0JUqQj8T0zlUYtNIvANcBDwx/QRPYsEcKzY5dovBj48GjC0YiRH\\nyTYPLAEQi10uGfgMeIdYvnA0QAaOFLtcuwkSWuxyuYGVQAuxgixGJ7cHmH3WkQn+Uuxy7QcWxwg2\\nLHwB7u4J2FXnEhwg+Xlgfp+ngRjhhoEI3A9sC2y7vQcd/TpPTucsYBOQENObIeAFfgO82JdcBjCq\\ntgL/AXwSm8WXPb4FrumP3AvO4D4zWQRuAf4E9E1p8ATW/PgwLe+KwHdIQHlRcj+9RVQrAt/lQkZH\\nKpAE2AIyTAYiTx6Ao3rgvmKXa+dAHYR8v1fqdJYAt9N7rFlIrDrepcBR4APg5WKX63AoDf4PrUkI\\nM6Av+xMAAAAASUVORK5CYII=`,\n]\n\nconst THREAT_DIE_IMAGES = [\n  `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`,\n  `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\\nAABJRU5ErkJggg==`,\n  `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`,\n  `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\\nyzzb/gAAAABJRU5ErkJggg==`,\n  `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\\nAAAAAElFTkSuQmCC`,\n  `iVBORw0KGgoAAAANSUhEUgAAAHgAAAB4CAYAAAA5ZDbSAAAABmJLR0QAIgCFANAjb8ykAAAACXBI\\nWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4goXESgdM5lsmgAAEOBJREFUeNrtnXt0VNW9xz/nzDOP\\nSSYzeSeQFw8R0GC1KIo8RApWrXrVXrmrtl29XWJXXdZSq2303ls0vm9ra+vSetX2tnrVXrDii8oV\\nEKpBQAhPESQPEpKQzORBMsk8z7l/ZIYGFuCcM+eMnGG+a2WtZGX23rN/37N/+7d/+/f7HYEvQHV9\\nowCYgQnA14BFwOVARvQjEiATH4Qv+PtEyAr6jmdMQcN+kwXTGDmvif6sAlqBUFNdraxE4CeS6wRm\\nAg8AF0WFEokSHhPUYHRw4STk5ABiApOLAO1AABgA/Cf8XwLygQLAdpLxnafpOwwMxfGQxWABQkkm\\nV47OSxxDdkz2nwCPA+831dV6FBNcXd94KbAMuB4IAlbSOBPxCfDjprraDSf7p3gSdUx1feMdwIoo\\nueE0uWc0vgL8LcrZF6/g6vrG3wJLx+j+NIwBCVjWVFf75CkJrq5v/CnwcIL7ZhpfLpYAr8SML/GE\\nPbcuTa7h8Xtg8nF7cNRaXh61etMwNrKB31fXN4oAYtSwuhSYn5ZNymA2sDC2gk3ALwx08E8jPvwW\\nQKiub5wK7E7LIzVXsgjcmF69KYtbzYz6lgU9ei/IMlPltiEK4AtI7OoaSYscOLfITq7dTFiSaekN\\n0OML6zXUQjMwQ6ve3JlmZpRlctP5LhZMyj3pZw56/Ly5t5+Vu3rx+MIEwqmtPKwmgdIcC4vOcXJz\\nrYuKPNtJP7f+4FFe3uZla5uPwUAESRuxjBOq6xsT7irXbmJOjYOllxQyuTAjrjayLPOHLR7+vM1L\\nS28gJcmtdtu4ZYabJTPc2C3xuRc+9/h5blM3q/cNMBSUEv4OCRNckWflx3OKufrcPFXtm3sDPLG+\\nk9X7BlKK3G9Mc3LbxfE/8Cdi1Z4+nljfyeGBxC6wzIz6MFV5r8Y7rTx81ThmVmSr/gJVLhsPLS7H\\nIgq8ubc/Jcj9Zq2Le+eXkmNX786/dmoeRdkW7ni9Fe+w+j1a5B93uopQmG1m+aLyhMg9puIzzDx0\\nVTmzKrMNT+61U53cM68kIXJjmFmRzX99syqhPmIrV5GyN4tww3QXs6sdmgkm02riwcXlmgjmy0KV\\ny8b3ZhaQm2HWrM/zSjL5ydzihAlWhNIcK3fPK9FcQBV5Nv51ZoEhyTUJcM1UJ9OKMzXv+/ZZRYxz\\nKr6SP+42SdEj9/2LC3UT1O2zCnHYjHehVe60cssMt279//vCMqVNjo4lOO5d3G4WuLnWpdtEREHg\\npvPdhiJXAM4vzaQw26LbGLOrHbizFK3DkbEEx+1imjshB7Mo6CqwG8/LMxTBZlHgmnOduo4hy3Ct\\nsjEKxxLcEvfh3WXTXWAT8u3GWsEClDv1lYsojG4DSu2rGMFxn6ZnVTqSIrAJ+TbDEGwSBSYV2HUf\\n44KyLP2taFOS7B9REEjjBJmokL041qSOB6FIci4HkjWOkRBWIZMYwXHv3k3eQFJWb3Ov3zCCl2QZ\\nr35XfsfGONQfVE1wRbwN9vfoL/ieoRA6XVHrZuE263wjJsmounVTrNXf+lT/C4EVu/qMpTolmXf3\\n6SuXiCTzroobN8UEH/VH2NQ6pOtkXmv0GopgSYaGFn1l0nE0pEp7qrKJH1/XqdtEVu/rp7UviNHQ\\nPhDkLzv0ezAfXduhzp5R02hf9whv7NZejQ4HIzyxvsuQFq4vKPFaY68uxtZHLYOs2X80eQT7wzLP\\nNHRrGmojyzK//KCL1j7jhu9sOzzMi1t6kGXtjnhdgyF++mab+hOJ2ob7e/zc9247HQOJq1NJlnl2\\nUw8vbfNqFWz2peGFzT08u6lHk75aegP86K+tdA6Gkk8wQEPrEHetOkTH0cRI/t2HR3jygy6CKeDc\\nCIRlfvVBJ7/ZmNhW0+z187N32tjS5kuoH6G6vjFWyiBXbScFWWZ+Mq+EG89Tdo3o8YW48/VWNrf5\\nDL9yT4RZHI3G+PX1FZTmKLusf2tvHw+u6Ug0XrobKNSE4Bgm5Nu4f0EZMyuysZiEY3uRIBz/++GB\\nIM82dPPSNi+pDosocP30PH5waSHjnLaTyiT29/sHBnhq4xGtEgRagMoYwcOAZtdEDpvI3Jocqlw2\\nxudZEQUBX1BiR8cwu7qG+azbz9mIacUZTCnKYFpxBg6biYgs09Yf5KAnwNrPjzISkrQc7hjBEf4R\\nXZm+wkkdtACVY++D0+SmFo4F3cmALy2PlEPW2GNSevWmHvITPgencUZDTBN8trCcRurCrFfHVpNA\\nfpaZvGieTkiS6RgIapLzamQ4bCJFDgt2s4gkQ/9IGI8vrJubVnOCZ1Vmc3m1gymFGTjspmNpKKGI\\njMcXpmcozNb2IV7f1Yc/fHYE1mVbRRZPcTKrMpv8LDPuTHPU0wdDQYmj/ggHevy8//kAm1q1PdBo\\n5qqcVpxB3YJSJubbybGbMJ0m+8EXjNA3HOF/tnt5pqE7pcm97eICbjrfRaHDQpb11JmTkizTNxzh\\ngMfPrzd2sfmQ78wh+N75Jdx6YT42s7ItPSzJ7Ose4Y6VraoiBs9klOZY+N0NlZxXqjzb0BeM8MLm\\nHp7+sDth1W3Ku2LpvzFaD1pxaL4owENXlXPrhQWq8pVEQaAw28LsKgebD/kSymQ/kzDOaWXltydS\\n5VaX7WA1icwcn41ZhG3tPsIJmC2qrWirSeDe+SXcXJt4JmBNvp3HrhlHtdtmeHJr3Db+8M/V5GuQ\\nabh0VhFLZxWSSK6fKoIF4OpznXxvpnZ5wtOKM7lnXglZVuOe3HLtJu6/soxKDRP07rismK9PcSaX\\nYHeWmbvmFGsuoAWTcll8jtOwBF99rlPTshYxLF9UjivTlDyCbzrfpThKIV7cPbcYswEXcWG2mSU6\\nZfjn2E3cObs4eQR/9yL96mjkZ1tYODnXcARPLsjgnKIM3fr/xtQ8LGoMWaUNppdkKC0loBjXTzNa\\nhj9cOVnfWupWs8AVkxSNIasieFES9sj5E421gk2iwJxqfQm2mATmKNvfO1QRXKxjoZGxXh0j1csS\\ngIJss+5j5CvTnCFVBJc7LUkRWmmOxTAEi4Kg2IunmGBBoFiFYSuqe5aSsyrSSFwmign+rDs5Rb0P\\neIwTWhuRZfp0drPKssxBbxLSRz0+/f3FskxC/tdkQ5ahb0TvEg7QPxJRTXBzvA1W7dE/+/713cbK\\n8I9Isu71rsMqx4gRPBxvg5a+IJ/rrD5X7uw1FsHyaEl+PdE3EqFBWWWF44Luxitp+fRHR3SbyO6u\\nYT4+ZLww7YPeABubBnXr/4XNilNSXWMJVnRKX//5INva9SHh0bWdGBH9IxFe2+EloIPx0NoX4L+3\\neJQ2yx5LsCILYcAf4VcbuvBrmyzF8x93s7XNuEkWq/cN8LYOVYh+sKKFkMr82hjBe5Q2/KhliEfW\\ndmj2xK7ZP8AzDd2GTgKXZFj+3mG2tmlXcedHf21NKBszRrCq66E/feLlqb8fYTAQSWgSG5sGqXun\\nnd7hCEbHYEDiO680sbNjGCmBWh2BsMR977bx5t7+hF5LF4vJykTla9y3tvnw+MKU51opUOin9vhC\\nrNrTz32r21Wd8c5UhCV4a28/zgwzZblWMizK3A2fHhnh0XWdrNiZ+HExFlV5CEjo9R4lDgs31bqY\\nW5PDlCI71tOUpe0YCLLp0BDv7O1n3cFBUhnzahwsmuLk4vHZp633HJFkdnQMs7FpkFV7+mjRqFZY\\njOCNwFwtOhzvtFLjtjG5MIOyXCsl0UsDf0hiv8dPe3+QAx4/e7tGOFsKylqi9aSnFGVQlmuhxm0n\\n0yoiyTLdQ2Ha+gLs9wQ40OOnfUDb8OEYwZ1AuZYdmwSwmkWsJiFqgMiMhCRDuSD1IttuETCJo5kN\\noYiMPyzpVoQmdsGoeaRYRIaRkMRIiDTGICTJhALJU13p7MIUh+KK72kYk+DMtChSm2BrWhSpTXAa\\naYLTMCI0j/W0iAKVLisLJuVS47ZR5bIhCAJDgQjbDw+zo2OYLW1DDAels8bRYRLAbhG5rMrB1OIM\\nzivJJNduIizJHOobdfy8t3+A9v4goYisqcUbc3QkHITszjJzSUU2d1xW9IWvpvOHJF7e7uWlbV7a\\n+gIpS7QATCqwc930PL71lfwv9Env6Rrmxc0eNjQNapYrrQnBc2sc3HZJIV8dr+wN3oGwxJMbulix\\nsy9lkr9jcGWauG6aiztnF5FtUybexsM+frmhi4aWoYQ9XLHbJNV78b9c4OaBxeVUq8hmN4sCl1U5\\nKM+1srnNx3AoNfyYrgwTD399HN+5qACrioD44hwrV0zMxTscZu+RxMKUEzKybpnh4p75JThsiWn4\\nxVOc1C8ux5lhMjy57kwzj10zngWTEsuvyrGb+I+FZdwwPU8TghWHDFxckcXPrig9beUYJVgwKZcf\\nXlp07HLCqMbUsrnFzJugTSKa3SLy+DXjOafQnjDBAaVP1w8vLdaM3Bi++9UCphVnGJbgOTU5XKdD\\n6uvT/1SZXBU9c3wWl1Rm6yKkny8oNWRekjPDxJIL3LokoVXk2bj1wvzkEbxsTokuQpJlmRllWUwv\\nMd4qrsizaaaaT4bbZxUmh+Aql42JOr3tWoi+FPpbKp/WL3PvvXJSju4aYpYKramY4Csm5ugusK9N\\nNl6G/+U6VNc5/iFSN4ZigmuSUKws0yJiMxtnJxYFGO+06T7GOGcSEsC1LPJ1yr04uqcZBYIg4NC5\\n5IQgCKeNytTF0aHrhEhDk5WvtEEyAtQFRvOf0jgeg35Jf4J3dg7rPpGwNPpaVaMgIsm6l7aIREsv\\nqyU4bqK3JCH7b0vbkKFWliTL7O7SmWDlY4THEhu3/b293ceAzvUoVu40VgmHsARv7+3XfRyFY3Sp\\nUtERGZ7f3KPbJAYDEcPV6IDRF2brqaZX7OxTmiMcVm1Fv7zNq9sqfsygGf6dgyFe3q7P63IlWeaR\\n9zuSY0XHLOkH/69D84k0tAzxvwYrwDIW7+4bYEOT9sVYfv5Ou5rXEZlUEywDf/tsgD9/4tFsEgc9\\nfh5Yc9jQGf5eX5jfbDxCS29Asz5fbfTylx2qHvqChBwdvqDEY+s6ea0xcbXU7PWz7M1DfNZj/BdH\\nbz88zF1vtNIRTQOVE8jy/9NWD8vfO6y2uR1GY7J+wWhEh+IQ2lBE5u/Ng/hDEpdUZB+7DVKCTa1D\\n3PVGapAbw5GhMBubBynLsaiKVQtFZP5zfSfPNHQzEkpMownV9Y0J60QBqHLbuP/KUi6Ps27yUX+E\\nR9Z28GpjL6kKq0ng2qlOls0toTDO8hYfNg/y6NpO9hzRxiIf+4p3TVDjtrHkAjeLz3HisInHrepQ\\nZLRMwcpdvaza08/ZApMACyfnsuQCN9OKMzGLHCeXvpEw6w4c5Y9bPRz0BjQdW6iub1wDLNBjYqPX\\naFYQBEaCEY4MhUljtLC3w2ZCkmXa+oO6ZfcDn5qBj/UiWJLRrJhIKsHjCyelai+wSQReTYs8ZfGc\\nCOwDNgNSWh4pgzDwaVNdbYMY/eO+qKGVJjk1YAbuBhCb6mplYDuwmnS+cCpABhqb6mrfJkZoU12t\\nB1gODJAuyGJ0coPAkmMnmdgvTXW1DcCyNMGGRSTK3bejdtXxBEdJfh64bczTQJpww0AEbgdei267\\no46Ok32yur7xFuA5ICstN0MgBCwFXhxLLqcxql4BLgQ+TK/iMx77gdqTkXvKFTxmJYvAQuApYMKY\\nf41EdX5mgpZ3c/Q7ZKG8KLnEaBHV5uh3OZXR4QJyAVt0DCNlmcun4agH+H5TXe0bp+sg7vu96vrG\\n2cB1jLo1J5CujvdlYDewDvhjU13tJ/E0+H+wXO43+XEpNAAAAABJRU5ErkJggg==`,\n]\n\nconst DieImage = ({ type, value, ...imageProps }) => {\n  const images = type === 'DEMON' ? DEMON_DIE_IMAGES : THREAT_DIE_IMAGES\n  const index = Math.min(Math.max(value - 1, 0), 5)\n  return (\n    <Popup\n      inverted\n      trigger={(\n        <img\n          alt={value}\n          src={`data:image/png;base64,${images[index]}`}\n          {...imageProps}\n        />\n)}\n    >\n      {type === 'DEMON' && (\n        <span>\n          <strong>Demon Die: </strong>\n          During the Threat phase, if a d6 roll exeeds this value, a Demon will\n          be added. Otherwise, this value is reduced by 1.\n        </span>\n      )}\n      {type !== 'DEMON' && (\n        <span>\n          <strong>Threat Die: </strong>\n          If no Demon is added during the Threat phase, and there are fewer\n          Troglodytes in play than this value, then Troglodytes will be added.\n        </span>\n      )}\n    </Popup>\n  )\n}\n\nDieImage.propTypes = {\n  type: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n}\n\nexport default DieImage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport renderHTML from 'react-render-html'\nimport { Button, Label, List, Popup, Rating } from 'semantic-ui-react'\n\nconst DemonWarriorItem = ({ warrior }) => {\n  if (warrior.numberInPlay)\n    return (\n      <List.Item>\n        <List.Content>\n          <Button\n            icon=\"remove\"\n            floated=\"right\"\n            size=\"tiny\"\n            onClick={warrior.onRemove}\n            compact\n            basic\n          />\n          <List.Header as=\"a\">\n            <Label circular horizontal>\n              {warrior.numberInPlay}\n            </Label>\n            <Popup\n              inverted\n              trigger={(\n                <span>\n                  {`${warrior.name}${warrior.numberInPlay > 1 ? 's' : ''}`}\n                </span>\n)}\n            >\n              <div>\n                <Label content={`${warrior.movement} MVT`} />\n                {' '}\n                <Label content={`${warrior.combat} CBT`} />\n                {' '}\n                <Label content={`${warrior.defense} DEF`} />\n                {!!warrior.rules && <div>{renderHTML(warrior.rules)}</div>}\n              </div>\n            </Popup>\n            {warrior.health > 1 && (\n              <div style={{ paddingLeft: '30px' }}>\n                <Rating\n                  icon=\"heart\"\n                  defaultRating={0}\n                  maxRating={warrior.health}\n                  size=\"tiny\"\n                />\n              </div>\n            )}\n          </List.Header>\n        </List.Content>\n      </List.Item>\n    )\n  return null\n}\n\nDemonWarriorItem.propTypes = {\n  warrior: PropTypes.object.isRequired,\n}\n\nexport default DemonWarriorItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, List, Segment } from 'semantic-ui-react'\nimport DieImage from '../DieImage'\nimport DemonWarriorItem from './DemonWarriorItem'\n\nconst GameSummary = ({ turn, demonDice, threatDice, warriors }) => {\n  const demonWarriorCount = warriors.reduce(\n    (result, warrior) => result + warrior.numberInPlay,\n    0,\n  )\n  return (\n    <Segment style={{ padding: '10px 10px 10px 10px' }}>\n      <Grid stackable={false}>\n        <Grid.Row stretched>\n          <Grid.Column width={5} verticalAlign=\"middle\">\n            <div>\n              <strong>\n                Turn:\n                {turn}\n              </strong>\n              <br />\n              <DieImage\n                style={{\n                  display: 'inline',\n                  width: '30px',\n                  height: '30px',\n                  margin: '5px 4px 0px 0px',\n                }}\n                type=\"DEMON\"\n                value={demonDice}\n              />\n              <DieImage\n                style={{\n                  display: 'inline',\n                  width: '30px',\n                  height: '30px',\n                  margin: '5px 0px 0px 4px',\n                }}\n                type=\"THREAT\"\n                value={threatDice}\n              />\n            </div>\n          </Grid.Column>\n          <Grid.Column\n            width={11}\n            verticalAlign=\"middle\"\n            style={{ paddingLeft: '0px' }}\n          >\n            {!!demonWarriorCount && (\n              <List>\n                {warriors.map((warrior, index) => (\n                  <DemonWarriorItem key={index} warrior={warrior} />\n                ))}\n              </List>\n            )}\n            {!demonWarriorCount && <span>No Demon warriors in play</span>}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n  )\n}\n\nGameSummary.propTypes = {\n  turn: PropTypes.number.isRequired,\n  demonDice: PropTypes.number.isRequired,\n  threatDice: PropTypes.number.isRequired,\n  warriors: PropTypes.array.isRequired,\n}\n\nexport default GameSummary\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { removeDemon, removeToughTrog, removeTrog } from '../../actions'\nimport GameSummary from '../../components/GameSummary'\nimport { DEMON_WARRIORS, SCENARIOS } from '../../config'\n\nexport const mapStateToProps = state => ({\n  currentState: state.current,\n})\n\nexport const GameSummaryContainer = ({\n  currentState,\n  removeDemon,\n  removeToughTrog,\n  removeTrog,\n}) => {\n  const {\n    scenarioKey,\n    turn,\n    demonDice,\n    threatDice,\n    demonsInPlay,\n    toughTrogsInPlay,\n    trogsInPlay,\n  } = currentState\n  const demon = DEMON_WARRIORS[(SCENARIOS[scenarioKey] || {}).demon] || {}\n  const warriors = [\n    {\n      ...demon,\n      numberInPlay: demonsInPlay,\n      onRemove: removeDemon,\n    },\n    {\n      ...DEMON_WARRIORS.TOUGH_TROGLODYTE,\n      numberInPlay: toughTrogsInPlay,\n      onRemove: removeToughTrog,\n    },\n    {\n      ...DEMON_WARRIORS.TROGLODYTE,\n      numberInPlay: trogsInPlay,\n      onRemove: removeTrog,\n    },\n  ]\n  return (\n    <GameSummary\n      turn={turn}\n      demonDice={demonDice}\n      threatDice={threatDice}\n      warriors={warriors}\n    />\n  )\n}\n\nGameSummaryContainer.propTypes = {\n  currentState: PropTypes.object.isRequired,\n  removeDemon: PropTypes.func.isRequired,\n  removeToughTrog: PropTypes.func.isRequired,\n  removeTrog: PropTypes.func.isRequired,\n}\n\nexport default connect(\n  mapStateToProps,\n  { removeDemon, removeToughTrog, removeTrog },\n)(GameSummaryContainer)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dropdown, Message } from 'semantic-ui-react'\nimport renderHTML from 'react-render-html'\n\nconst EventMessage = ({ upcomingEvent, removeEvent }) => (\n  <Message negative>\n    <div style={{ float: 'right' }}>\n      <Dropdown text=\"\" error>\n        <Dropdown.Menu direction=\"left\">\n          <Dropdown.Item text=\"Cancel Event\" onClick={removeEvent} />\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n    <Message.Header>{upcomingEvent.name}</Message.Header>\n    <Message.Content>\n      {renderHTML(upcomingEvent.description || '')}\n    </Message.Content>\n  </Message>\n)\n\nEventMessage.propTypes = {\n  upcomingEvent: PropTypes.object.isRequired,\n  removeEvent: PropTypes.func.isRequired,\n}\n\nexport default EventMessage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { removeEvent } from '../../actions'\nimport EventMessage from '../../components/EventMessage'\n\nexport const mapStateToProps = state => ({\n  currentState: state.current,\n})\n\nexport const EventMessageContainer = ({ currentState, removeEvent }) => {\n  const { upcomingEvent } = currentState\n  if (!!upcomingEvent && upcomingEvent.phase === currentState.phase) {\n    return (\n      <EventMessage upcomingEvent={upcomingEvent} removeEvent={removeEvent} />\n    )\n  }\n  return null\n}\n\nEventMessageContainer.propTypes = {\n  currentState: PropTypes.object.isRequired,\n  removeEvent: PropTypes.func.isRequired,\n}\n\nexport default connect(\n  mapStateToProps,\n  { removeEvent },\n)(EventMessageContainer)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Modal, Portal } from 'semantic-ui-react'\n\nclass RulesSummaryButton extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: props.open || false,\n    }\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  render() {\n    const { as: ButtonComponent, ...buttonProps } = this.props\n    const { open } = this.state\n\n    // use a Portal in order to support a Dropdown.Item trigger component\n    return (\n      <Portal\n        open={open}\n        closeOnTriggerClickk={false}\n        openOnTriggerClick\n        trigger={<ButtonComponent {...buttonProps} />}\n        onOpen={this.handleOpen}\n        onClose={this.handleClose}\n      >\n        <Modal open closeOnDimmerClick={false}>\n          <Modal.Header>Rules Summary</Modal.Header>\n          <Modal.Content>\n            <div>\n              <p>\n                <strong>General: </strong>\n                Play using the rules from the Claustrophbia board game, unless\n                stated otherwise here. Follow the instructions for each phase\n                and track your progress when you complete each phase.\n              </p>\n              <p>\n                <strong>Setup: </strong>\n                Event cards, Demon cards, Threat Point tokens and the Board of\n                Destiny are not needed, as they will be replaced by this app.\n              </p>\n              <p>\n                <strong>Tile Placement: </strong>\n                The Human player decides the orientation when placing tiles.\n              </p>\n              <p>\n                <strong>Hole in the Ground: </strong>\n                This tile should be treated as a\n                <strong>Lair </strong>\n                tile instead.\n              </p>\n              <p>\n                <strong>Demonic Mechanism*: </strong>\n                This tile has changed to increase the Threat Die by 2, when\n                placed.\n              </p>\n              <p>\n                <strong>Oil for your lamp*: </strong>\n                This advantage has been modified to prevent an event card from\n                being drawn on that turn, in addition to cancelling the effect\n                of the\n                <strong> Demonic Mechanism </strong>\n                tile.\n              </p>\n              <p>\n                <strong>Aura of Blessing*: </strong>\n                This gift has changed to reduce the Threat Die by 2.\n              </p>\n              <p>\n                <strong>* </strong>\n                Click the button corresponding to each action, and the results\n                will be applied automatically.\n              </p>\n            </div>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button content=\"Close\" onClick={this.handleClose} />\n          </Modal.Actions>\n        </Modal>\n      </Portal>\n    )\n  }\n}\n\nRulesSummaryButton.defaultProps = {\n  as: Button,\n}\n\nRulesSummaryButton.propTypes = {\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n}\n\nexport default RulesSummaryButton\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Divider, Header, Modal, Portal } from 'semantic-ui-react'\n\nclass DemonAISummaryButton extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: props.open || false,\n    }\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  render() {\n    const { as: ButtonComponent, ...buttonProps } = this.props\n    const { open } = this.state\n\n    // use a Portal in order to support a Dropdown.Item trigger component\n    return (\n      <Portal\n        open={open}\n        closeOnTriggerClickk={false}\n        openOnTriggerClick\n        trigger={<ButtonComponent {...buttonProps} />}\n        onOpen={this.handleOpen}\n        onClose={this.handleClose}\n      >\n        <Modal open closeOnDimmerClick={false}>\n          <Modal.Header>Demon AI Summary</Modal.Header>\n          <Modal.Content>\n            <div>\n              <Header as=\"h4\">\n                <Header.Content>\n                  <span style={{ color: 'red' }}>Demon Die</span>\n                  <Header.Subheader>\n                    Determines when a Demon will be added\n                  </Header.Subheader>\n                </Header.Content>\n              </Header>\n              <p>\n                During the Threat phase, if there is no demon in play, then a d6\n                is rolled. If the result exceeds the Demon Die, then a demon is\n                added and the Demon Die is reset to 6. If the result does not,\n                then the Demon Die is reduced by 1.\n              </p>\n              <p>\n                Where the Demon is added will depend on the scenario and the\n                situation. The scenario will limit the number of times a Demon\n                can be added.\n              </p>\n              <Divider />\n              <Header as=\"h4\">\n                <Header.Content>\n                  <span style={{ color: 'blue' }}>Threat Die</span>\n                  <Header.Subheader>\n                    Determines when Troglodytes will be added\n                    <br />\n                    (also Supernatural Speed or Sharpened Claws)\n                  </Header.Subheader>\n                </Header.Content>\n              </Header>\n              <p>\n                During the Threat phase, if no demon has just been added, and\n                the number of Troglodytes in play is less than the Threat Die,\n                then Troglodytes will be added and the Threat Die is reduced by\n                1.\n              </p>\n              <p>\n                All Troglodytes may gain\n                <strong> Supernatural Speed </strong>\n                and/or\n                <strong> Sharpened Claws </strong>\n                depending on their proximity to Human warriors, further reducing\n                the Threat Die (by 2 and 1 respectively). When the Threat Die\n                reaches 0, it is rolled again.\n              </p>\n              <p>\n                Where the Troglodytes are added will depend on the scenario and\n                the situation.\n              </p>\n              <Divider />\n              <Header as=\"h4\">\n                <Header.Content>\n                  Events\n                  <Header.Subheader>\n                    Removing Troglogytes increases the chance that the Demon AI\n                    will draw an Event during the next Threat phase.\n                  </Header.Subheader>\n                </Header.Content>\n              </Header>\n              <p>\n                The odds of drawing a card increase, the more Troglodytes that\n                are removed and the fewer that remain (percent of drawing an\n                Event = 1 / total number of Troglodytes before removal). For\n                example, removing 1 Troglodye, when there are 5 remaining,\n                results in 20% chance of drawing an Event. Removing the last\n                Troglodyte will guarantee that an event will be drawn.\n              </p>\n              <p>A maximum of 1 Event can be drawn per turn.</p>\n              <p>The text of an Event may change depending on the scenario.</p>\n              <p>\n                The\n                <strong> Trap </strong>\n                and\n                <strong> They Are Legion </strong>\n                actions from the Board of Destiny have been converted into\n                Events.\n              </p>\n              <p>\n                Events may be cancelled with no effect, by using the upper right\n                menu in the Event message (like when using\n                <strong> Our Faith Will Protect Us</strong>\n                ).\n              </p>\n            </div>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button content=\"Close\" onClick={this.handleClose} />\n          </Modal.Actions>\n        </Modal>\n      </Portal>\n    )\n  }\n}\n\nDemonAISummaryButton.defaultProps = {\n  as: Button,\n}\n\nDemonAISummaryButton.propTypes = {\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n}\n\nexport default DemonAISummaryButton\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Dropdown } from 'semantic-ui-react'\nimport RulesSummaryButton from '../RulesSummaryButton'\nimport DemonAISummaryButton from '../DemonAISummaryButton'\nimport { SCENARIOS } from '../../config'\n\nclass Welcome extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { scenarioKey: undefined }\n  }\n\n  render() {\n    const { startGame } = this.props\n    const { scenarioKey } = this.state\n    const options = Object.keys(SCENARIOS).map(key => ({\n      key,\n      value: key,\n      text: SCENARIOS[key].name,\n    }))\n\n    return (\n      <div>\n        <p>\n          Welcome to the\n          <strong> Demon AI </strong>\n          app for playing the\n          <strong> Claustrophobia </strong>\n          board game (by CROC) solo.\n        </p>\n        <p>\n          Please start by reading the short\n          {' '}\n          <RulesSummaryButton as=\"a\" style={{ cursor: 'pointer' }}>\n            rules summary\n          </RulesSummaryButton>\n          .\n        </p>\n        <p>\n          It may be helpful to read the\n          {' '}\n          <DemonAISummaryButton as=\"a\" style={{ cursor: 'pointer' }}>\n            Demon AI summary\n          </DemonAISummaryButton>\n          {' '}\n          to understand how it plays.\n        </p>\n        <p>Now you&apos;re ready to pick a scenario and start playing!</p>\n        <Dropdown\n          placeholder=\"Pick a Scenario...\"\n          search\n          selection\n          options={options}\n          onChange={(event, { value }) => this.setState({ scenarioKey: value })}\n          fluid\n        />\n        <br />\n        <Button.Group vertical fluid>\n          <Button\n            primary\n            fluid\n            disabled={!scenarioKey}\n            content=\"Start Game\"\n            onClick={() => startGame(scenarioKey)}\n          />\n        </Button.Group>\n        <br />\n        <p>\n          <i>\n            This app is based on a solo variant written by Reverend Uncle\n            Bastard (on BGG), with several changes (mainly to introduce events).\n            If you want to play without the app, or you&apos;re just curious,\n            check out the\n            {' '}\n            <a\n              target=\"_\"\n              href=\"https://www.boardgamegeek.com/thread/1307964/claustrophobia-solo-variant-demon-ai-now-hellhound\"\n            >\n              original variant\n            </a>\n            .\n          </i>\n        </p>\n      </div>\n    )\n  }\n}\n\nWelcome.propTypes = {\n  startGame: PropTypes.func.isRequired,\n}\n\nexport default Welcome\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Step } from 'semantic-ui-react'\n\nconst PHASES = [\n  { key: 'INITIATIVE', text: 'Initiative' },\n  { key: 'HUMAN_ACTION', text: 'Human', text2: 'Actions' },\n  { key: 'THREAT', text: 'Threat' },\n  { key: 'DEMON_ACTION', text: 'Demon', text2: 'Actions' },\n]\n\nconst PhaseHeader = ({ phase }) => (\n  <Step.Group unstackable fluid>\n    {PHASES.map(phaseConfig => (\n      <Step\n        key={phaseConfig.key}\n        active={phase === phaseConfig.key}\n        disabled={phase !== phaseConfig.key}\n        style={{ padding: '5px 0px 5px 0px' }}\n      >\n        <Step.Content>\n          <Step.Description>{phaseConfig.text}</Step.Description>\n          {!!phaseConfig.text2 && (\n            <Step.Description>{phaseConfig.text2}</Step.Description>\n          )}\n        </Step.Content>\n      </Step>\n    ))}\n  </Step.Group>\n)\n\nPhaseHeader.propTypes = {\n  phase: PropTypes.string.isRequired,\n}\n\nexport default PhaseHeader\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'semantic-ui-react'\n\nconst InitiativePhase = ({\n  oilForYourLamp,\n  useAuraOfBlessing,\n  useOilForYourLamp,\n  completeInitiativePhase,\n}) => (\n  <div>\n    <p>Play this phase normally.</p>\n    <Button.Group vertical fluid>\n      <Button\n        icon=\"heart\"\n        content=\"Aura of Blessing (-2 Threat)\"\n        onClick={useAuraOfBlessing}\n      />\n      {!oilForYourLamp && (\n        <Button\n          icon=\"tint\"\n          content=\"Oil For Your Lamp (No Events)\"\n          onClick={useOilForYourLamp}\n        />\n      )}\n      <Button\n        primary\n        fluid\n        icon=\"play\"\n        content=\"Next Phase\"\n        onClick={completeInitiativePhase}\n      />\n    </Button.Group>\n  </div>\n)\n\nInitiativePhase.propTypes = {\n  oilForYourLamp: PropTypes.bool.isRequired,\n  useAuraOfBlessing: PropTypes.func.isRequired,\n  useOilForYourLamp: PropTypes.func.isRequired,\n  completeInitiativePhase: PropTypes.func.isRequired,\n}\n\nexport default InitiativePhase\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {\n  useAuraOfBlessing,\n  useOilForYourLamp,\n  completeInitiativePhase,\n} from '../../actions'\nimport InitiativePhase from '../../components/InitiativePhase'\n\nexport const mapStateToProps = state => ({\n  currentState: state.current,\n})\n\nexport const InitiativePhaseContainer = ({\n  currentState,\n  useAuraOfBlessing,\n  useOilForYourLamp,\n  completeInitiativePhase,\n}) => {\n  const { oilForYourLamp } = currentState\n  return (\n    <InitiativePhase\n      oilForYourLamp={oilForYourLamp}\n      useAuraOfBlessing={useAuraOfBlessing}\n      useOilForYourLamp={useOilForYourLamp}\n      completeInitiativePhase={completeInitiativePhase}\n    />\n  )\n}\n\nInitiativePhaseContainer.propTypes = {\n  currentState: PropTypes.object.isRequired,\n  useAuraOfBlessing: PropTypes.func.isRequired,\n  useOilForYourLamp: PropTypes.func.isRequired,\n  completeInitiativePhase: PropTypes.func.isRequired,\n}\n\nexport default connect(\n  mapStateToProps,\n  { useAuraOfBlessing, useOilForYourLamp, completeInitiativePhase },\n)(InitiativePhaseContainer)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'semantic-ui-react'\n\nconst HumanActionPhase = ({\n  scenarioKey,\n  oilForYourLamp,\n  demonsInPlay,\n  threatDice,\n  addDemon,\n  placeDemonicMechanismTile,\n  placeTile,\n  completeHumanActionPhase,\n}) => (\n  <div>\n    <p>Record removed warriors and the following actions below:</p>\n    <Button.Group vertical fluid>\n      {scenarioKey !== 'THE_RITUAL' && (\n        <Button\n          disabled={oilForYourLamp}\n          icon=\"cog\"\n          content=\"Demonic Mechanism tile (+2 Threat)\"\n          onClick={placeDemonicMechanismTile}\n        />\n      )}\n      {scenarioKey === 'THE_POSSESSED' && (\n        <Button\n          icon=\"box\"\n          content=\"Stash tile (+1 Possessed One)\"\n          onClick={addDemon}\n        />\n      )}\n      {scenarioKey === 'HIT_THEM_WHERE_IT_HURTS' &&\n        !demonsInPlay && (\n          <Button\n            icon=\"star outline\"\n            content=\"Pentacle Room tile (+1 Master of Souls)\"\n            onClick={addDemon}\n          />\n        )}\n      {scenarioKey === 'HIT_THEM_WHERE_IT_HURTS' && (\n        <Button\n          disabled={threatDice < 3}\n          icon=\"square plus outline\"\n          content=\"Any other tile (+2 Troglodytes)\"\n          onClick={placeTile}\n        />\n      )}\n      <Button\n        primary\n        icon=\"play\"\n        content=\"Next Phase\"\n        onClick={completeHumanActionPhase}\n      />\n    </Button.Group>\n  </div>\n)\n\nHumanActionPhase.propTypes = {\n  scenarioKey: PropTypes.string.isRequired,\n  oilForYourLamp: PropTypes.bool.isRequired,\n  demonsInPlay: PropTypes.number.isRequired,\n  threatDice: PropTypes.number.isRequired,\n  addDemon: PropTypes.func.isRequired,\n  placeDemonicMechanismTile: PropTypes.func.isRequired,\n  placeTile: PropTypes.func.isRequired,\n  completeHumanActionPhase: PropTypes.func.isRequired,\n}\n\nexport default HumanActionPhase\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {\n  addDemon,\n  placeDemonicMechanismTile,\n  placeTile,\n  completeHumanActionPhase,\n} from '../../actions'\nimport HumanActionPhase from '../../components/HumanActionPhase'\n\nexport const mapStateToProps = state => ({\n  currentState: state.current,\n})\n\nexport const HumanActionPhaseContainer = ({\n  currentState,\n  addDemon,\n  placeDemonicMechanismTile,\n  placeTile,\n  completeHumanActionPhase,\n}) => {\n  const { scenarioKey, oilForYourLamp, demonsInPlay, threatDice } = currentState\n  return (\n    <HumanActionPhase\n      scenarioKey={scenarioKey}\n      oilForYourLamp={oilForYourLamp}\n      demonsInPlay={demonsInPlay}\n      threatDice={threatDice}\n      addDemon={addDemon}\n      placeDemonicMechanismTile={placeDemonicMechanismTile}\n      placeTile={placeTile}\n      completeHumanActionPhase={completeHumanActionPhase}\n    />\n  )\n}\n\nHumanActionPhaseContainer.propTypes = {\n  currentState: PropTypes.object.isRequired,\n  addDemon: PropTypes.func.isRequired,\n  placeDemonicMechanismTile: PropTypes.func.isRequired,\n  placeTile: PropTypes.func.isRequired,\n  completeHumanActionPhase: PropTypes.func.isRequired,\n}\n\nexport default connect(\n  mapStateToProps,\n  { addDemon, placeDemonicMechanismTile, placeTile, completeHumanActionPhase },\n)(HumanActionPhaseContainer)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'semantic-ui-react'\n\nconst ThreatEventStep = ({ completeThreatEventStep }) => (\n  <div>\n    <Button.Group vertical fluid>\n      <Button\n        primary\n        icon=\"play\"\n        content=\"Next\"\n        onClick={completeThreatEventStep}\n      />\n    </Button.Group>\n  </div>\n)\n\nThreatEventStep.propTypes = {\n  completeThreatEventStep: PropTypes.func.isRequired,\n}\n\nexport default ThreatEventStep\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Checkbox } from 'semantic-ui-react'\n\nclass CheckDemonPlacementStep extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { legalPlacement: false }\n  }\n\n  render() {\n    const { completeThreatDemonPlacementStep } = this.props\n    const { legalPlacement } = this.state\n\n    return (\n      <div>\n        <Checkbox\n          label=\"At least 1 legal placement for a Demon within 4 tiles of a Human warrior?\"\n          onChange={() => this.setState({ legalPlacement: !legalPlacement })}\n          checked={legalPlacement}\n        />\n        <br />\n        <br />\n        <Button.Group vertical fluid>\n          <Button\n            primary\n            icon=\"play\"\n            content=\"Next\"\n            onClick={() => completeThreatDemonPlacementStep(legalPlacement)}\n          />\n        </Button.Group>\n      </div>\n    )\n  }\n}\n\nCheckDemonPlacementStep.propTypes = {\n  completeThreatDemonPlacementStep: PropTypes.func.isRequired,\n}\n\nexport default CheckDemonPlacementStep\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Checkbox } from 'semantic-ui-react'\n\nclass CheckTrogsPlacementStep extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { legalPlacement: false }\n  }\n\n  render() {\n    const { completeThreatTrogsPlacementStep } = this.props\n    const { legalPlacement } = this.state\n\n    return (\n      <div>\n        <Checkbox\n          label=\"At least 1 legal placement for Troglodytes within 4 tiles of a Human warrior?\"\n          onChange={() => this.setState({ legalPlacement: !legalPlacement })}\n          checked={legalPlacement}\n        />\n        <br />\n        <br />\n        <Button.Group vertical fluid>\n          <Button\n            primary\n            icon=\"play\"\n            content=\"Next\"\n            onClick={() => completeThreatTrogsPlacementStep(legalPlacement)}\n          />\n        </Button.Group>\n      </div>\n    )\n  }\n}\n\nCheckTrogsPlacementStep.propTypes = {\n  completeThreatTrogsPlacementStep: PropTypes.func.isRequired,\n}\n\nexport default CheckTrogsPlacementStep\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport renderHTML from 'react-render-html'\nimport { Button, Message } from 'semantic-ui-react'\n\nconst SpawnDemonStep = ({\n  scenario,\n  demonName,\n  legalPlacement,\n  completeThreatSpawnDemonStep,\n}) => {\n  const spawnLocation =\n    scenario.demonSpawnLocation ||\n    '<li>the <strong>largest group</strong> of Human warriors</li>'\n  return (\n    <div>\n      {!legalPlacement && (\n        <Message negative>\n          <Message.Header>A Taste for Blood</Message.Header>\n          <Message.Content>\n            Human warriors cannot prevent the appearance of Demons.\n          </Message.Content>\n        </Message>\n      )}\n      <p>\n        Add the\n        <strong>{` ${demonName} `}</strong>\n        to the tile closest to:\n      </p>\n      <ul>{renderHTML(spawnLocation)}</ul>\n      {legalPlacement && (\n        <p>\n          <i>Reminder: Human warriors block tiles with unexplored openings</i>\n        </p>\n      )}\n      <Button.Group vertical fluid>\n        <Button\n          primary\n          icon=\"play\"\n          content=\"Next Phase\"\n          onClick={completeThreatSpawnDemonStep}\n        />\n      </Button.Group>\n    </div>\n  )\n}\n\nSpawnDemonStep.defaultProps = {\n  demonName: 'Demon',\n}\n\nSpawnDemonStep.propTypes = {\n  scenario: PropTypes.object.isRequired,\n  demonName: PropTypes.string,\n  legalPlacement: PropTypes.bool.isRequired,\n  completeThreatSpawnDemonStep: PropTypes.func.isRequired,\n}\n\nexport default SpawnDemonStep\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport renderHTML from 'react-render-html'\nimport { Button, Input, Message } from 'semantic-ui-react'\n\nclass SpawnTrogsStep extends Component {\n  constructor(props) {\n    super(props)\n    const { legalPlacement, threatDice } = props\n    const maxTrogs = legalPlacement ? threatDice : Math.min(threatDice, 3)\n    this.state = { trogsAdded: maxTrogs, maxTrogs }\n  }\n\n  render = () => {\n    const {\n      scenario,\n      legalPlacement,\n      completeThreatSpawnTrogsStep,\n    } = this.props\n    const { trogsAdded, maxTrogs } = this.state\n    const spawnLocation =\n      scenario.trogsSpawnLocation ||\n      '<li>the <strong>largest group</strong> of Human warriors</li>'\n\n    return (\n      <div>\n        {!legalPlacement && (\n          <Message negative>\n            <Message.Header>A Taste for Blood</Message.Header>\n            <Message.Content>\n              Human warriors cannot prevent the appearance of Troglodytes.\n            </Message.Content>\n          </Message>\n        )}\n        <p>\n          Add up to\n          <strong>{` ${maxTrogs} `}</strong>\n          Troglogytes to tiles closest to:\n        </p>\n        <ul>{renderHTML(spawnLocation)}</ul>\n        {legalPlacement && (\n          <p>\n            <i>Reminder: Human warriors block tiles with unexplored openings</i>\n          </p>\n        )}\n        <Input\n          label=\"Troglogytes added\"\n          placeholder=\"0\"\n          type=\"number\"\n          min={0}\n          max={6}\n          value={trogsAdded}\n          onChange={(event, { value }) => this.setState({ trogsAdded: value })}\n          fluid\n        />\n        <br />\n        <Button.Group vertical fluid>\n          <Button\n            primary\n            disabled={!trogsAdded}\n            icon=\"play\"\n            content=\"Next\"\n            onClick={() =>\n              completeThreatSpawnTrogsStep(parseInt(trogsAdded, 10))\n            }\n          />\n        </Button.Group>\n      </div>\n    )\n  }\n}\n\nSpawnTrogsStep.propTypes = {\n  scenario: PropTypes.object.isRequired,\n  legalPlacement: PropTypes.bool.isRequired,\n  threatDice: PropTypes.number.isRequired,\n  completeThreatSpawnTrogsStep: PropTypes.func.isRequired,\n}\n\nexport default SpawnTrogsStep\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ThreatEventStep from './ThreatEventStep'\nimport CheckDemonPlacementStep from './CheckDemonPlacementStep'\nimport CheckTrogsPlacementStep from './CheckTrogsPlacementStep'\nimport SpawnDemonStep from './SpawnDemonStep'\nimport SpawnTrogsStep from './SpawnTrogsStep'\nimport CheckTrogsDistanceStep from './CheckTrogsDistanceStep'\n\nconst STEPS_CONFIG = {\n  CHECK_DEMON_PLACEMENT: CheckDemonPlacementStep,\n  CHECK_TROGS_DISTANCE: CheckTrogsDistanceStep,\n  CHECK_TROGS_PLACEMENT: CheckTrogsPlacementStep,\n  SPAWN_DEMON: SpawnDemonStep,\n  SPAWN_TROGS: SpawnTrogsStep,\n  THREAT_EVENT: ThreatEventStep,\n}\n\nconst ThreatPhase = ({\n  scenario,\n  threatStep,\n  demonName,\n  threatDice,\n  legalPlacement,\n  completeThreatDemonPlacementStep,\n  completeThreatTrogsDistanceStep,\n  completeThreatTrogsPlacementStep,\n  completeThreatSpawnDemonStep,\n  completeThreatSpawnTrogsStep,\n  completeThreatEventStep,\n}) => {\n  const StepCompoonent = STEPS_CONFIG[threatStep]\n  let stepProps = {}\n  if (threatStep === 'CHECK_DEMON_PLACEMENT') {\n    stepProps = { completeThreatDemonPlacementStep }\n  } else if (threatStep === 'CHECK_TROGS_DISTANCE') {\n    stepProps = { completeThreatTrogsDistanceStep }\n  } else if (threatStep === 'CHECK_TROGS_PLACEMENT') {\n    stepProps = { completeThreatTrogsPlacementStep }\n  } else if (threatStep === 'SPAWN_DEMON') {\n    stepProps = {\n      scenario,\n      demonName,\n      legalPlacement,\n      completeThreatSpawnDemonStep,\n    }\n  } else if (threatStep === 'SPAWN_TROGS') {\n    stepProps = {\n      scenario,\n      threatDice,\n      legalPlacement,\n      completeThreatSpawnTrogsStep,\n    }\n  } else {\n    stepProps = { completeThreatEventStep }\n  }\n  return <StepCompoonent {...stepProps} />\n}\n\nThreatPhase.defaultProps = {\n  demonName: 'Demon',\n}\n\nThreatPhase.propTypes = {\n  scenario: PropTypes.object.isRequired,\n  threatStep: PropTypes.string.isRequired,\n  demonName: PropTypes.string,\n  threatDice: PropTypes.number.isRequired,\n  legalPlacement: PropTypes.bool.isRequired,\n  completeThreatDemonPlacementStep: PropTypes.func.isRequired,\n  completeThreatTrogsDistanceStep: PropTypes.func.isRequired,\n  completeThreatTrogsPlacementStep: PropTypes.func.isRequired,\n  completeThreatSpawnDemonStep: PropTypes.func.isRequired,\n  completeThreatSpawnTrogsStep: PropTypes.func.isRequired,\n  completeThreatEventStep: PropTypes.func.isRequired,\n}\n\nexport default ThreatPhase\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Checkbox } from 'semantic-ui-react'\n\nclass CheckTrogsDistanceStep extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { trogsFar: false, trogsClose: false }\n  }\n\n  render() {\n    const { completeThreatTrogsDistanceStep } = this.props\n    const { trogsFar, trogsClose } = this.state\n\n    return (\n      <div>\n        <Checkbox\n          id=\"trogsFar\"\n          label=\"Any Troglogytes 2 or more tiles away from the closest human?\"\n          onChange={() => this.setState({ trogsFar: !trogsFar })}\n          checked={trogsFar}\n        />\n        <br />\n        <br />\n        <Checkbox\n          id=\"trogsClose\"\n          label=\"Any Troglogytes adjacent to or on the same tile as a human?\"\n          onChange={() => this.setState({ trogsClose: !trogsClose })}\n          checked={trogsClose}\n        />\n        <br />\n        <br />\n        <Button.Group vertical fluid>\n          <Button\n            primary\n            icon=\"play\"\n            content=\"Next Phase\"\n            onClick={() =>\n              completeThreatTrogsDistanceStep(trogsFar, trogsClose)\n            }\n          />\n        </Button.Group>\n      </div>\n    )\n  }\n}\n\nCheckTrogsDistanceStep.propTypes = {\n  completeThreatTrogsDistanceStep: PropTypes.func.isRequired,\n}\n\nexport default CheckTrogsDistanceStep\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {\n  completeThreatDemonPlacementStep,\n  completeThreatTrogsDistanceStep,\n  completeThreatTrogsPlacementStep,\n  completeThreatSpawnDemonStep,\n  completeThreatSpawnTrogsStep,\n  completeThreatEventStep,\n} from '../../actions'\nimport ThreatPhase from '../../components/ThreatPhase'\nimport { DEMON_WARRIORS, SCENARIOS } from '../../config'\n\nexport const mapStateToProps = state => ({\n  currentState: state.current,\n})\n\nexport const ThreatPhaseContainer = ({\n  currentState,\n  completeThreatDemonPlacementStep,\n  completeThreatTrogsDistanceStep,\n  completeThreatTrogsPlacementStep,\n  completeThreatSpawnDemonStep,\n  completeThreatSpawnTrogsStep,\n  completeThreatEventStep,\n}) => {\n  const { scenarioKey, threatStep, legalPlacement, threatDice } = currentState\n  const scenario = SCENARIOS[scenarioKey] || {}\n  const demonName = (DEMON_WARRIORS[scenario.demon] || {}).name\n\n  return (\n    <ThreatPhase\n      scenario={scenario}\n      threatStep={threatStep}\n      demonName={demonName}\n      threatDice={threatDice}\n      legalPlacement={legalPlacement}\n      completeThreatDemonPlacementStep={completeThreatDemonPlacementStep}\n      completeThreatTrogsDistanceStep={completeThreatTrogsDistanceStep}\n      completeThreatTrogsPlacementStep={completeThreatTrogsPlacementStep}\n      completeThreatSpawnDemonStep={completeThreatSpawnDemonStep}\n      completeThreatSpawnTrogsStep={completeThreatSpawnTrogsStep}\n      completeThreatEventStep={completeThreatEventStep}\n    />\n  )\n}\n\nThreatPhaseContainer.propTypes = {\n  currentState: PropTypes.object.isRequired,\n  completeThreatDemonPlacementStep: PropTypes.func.isRequired,\n  completeThreatTrogsDistanceStep: PropTypes.func.isRequired,\n  completeThreatTrogsPlacementStep: PropTypes.func.isRequired,\n  completeThreatSpawnDemonStep: PropTypes.func.isRequired,\n  completeThreatSpawnTrogsStep: PropTypes.func.isRequired,\n  completeThreatEventStep: PropTypes.func.isRequired,\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    completeThreatDemonPlacementStep,\n    completeThreatTrogsDistanceStep,\n    completeThreatTrogsPlacementStep,\n    completeThreatSpawnDemonStep,\n    completeThreatSpawnTrogsStep,\n    completeThreatEventStep,\n  },\n)(ThreatPhaseContainer)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Message } from 'semantic-ui-react'\n\nconst DemonActionPhase = ({\n  scenarioKey,\n  trogsSupernaturalSpeed,\n  trogsSharpenedClaws,\n  demonsInPlay,\n  completeDemonActionPhase,\n}) => (\n  <div>\n    {trogsSupernaturalSpeed && (\n      <Message negative>\n        <Message.Header>Supernatural Speed</Message.Header>\n        <Message.Content>\n          <span>All Troglodytes gain </span>\n          <strong>+1 MVT</strong>\n          <span>.</span>\n        </Message.Content>\n      </Message>\n    )}\n    {trogsSharpenedClaws && (\n      <Message negative>\n        <Message.Header>Sharpened Claws</Message.Header>\n        <Message.Content>\n          <span>All Troglodytes are </span>\n          <strong>Frantic</strong>\n          <span>.</span>\n        </Message.Content>\n      </Message>\n    )}\n\n    {scenarioKey !== 'THE_RITUAL' && (\n      <div>\n        <p>\n          <strong>Activation order: </strong>\n          <span>proximity to Human warriors (closest first).</span>\n        </p>\n        <p>\n          <strong>Action order: </strong>\n          if on a tile with a Human warrior, attack then move. Otherwise, move\n          then attack.\n        </p>\n        <p>\n          <strong>Move: </strong>\n          towards the closest Human warrior (largest group if tied).\n        </p>\n        <p>\n          <strong>Attack: </strong>\n          most wounded Human warrior (lowest defense if tied).\n        </p>\n      </div>\n    )}\n\n    {scenarioKey === 'THE_RITUAL' && (\n      <div>\n        <p>\n          <strong>Activation order: </strong>\n          proximity to the Pentacle Room (closest first).\n        </p>\n        <p>\n          <strong>Action order: </strong>\n          if on a tile with a Human warrior, attack then move. Otherwise, move\n          then attack.\n        </p>\n        <p>\n          <strong>Move: </strong>\n          Troglodytes move towards the Pentacle Room.\n          {!!demonsInPlay && (\n            <span>\n              <span>The </span>\n              <strong>Demon of Cruelty </strong>\n              will not move.\n            </span>\n          )}\n        </p>\n        <p>\n          <strong>Attack: </strong>\n          most wounded Human warrior (lowest defense if tied).\n        </p>\n      </div>\n    )}\n    <br />\n    <Button.Group vertical fluid>\n      <Button\n        primary\n        icon=\"play\"\n        content=\"Next Phase\"\n        onClick={completeDemonActionPhase}\n      />\n    </Button.Group>\n  </div>\n)\n\nDemonActionPhase.defaultProps = {\n  trogsSupernaturalSpeed: false,\n  trogsSharpenedClaws: false,\n}\n\nDemonActionPhase.propTypes = {\n  scenarioKey: PropTypes.string.isRequired,\n  trogsSupernaturalSpeed: PropTypes.bool,\n  trogsSharpenedClaws: PropTypes.bool,\n  demonsInPlay: PropTypes.number.isRequired,\n  completeDemonActionPhase: PropTypes.func.isRequired,\n}\n\nexport default DemonActionPhase\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport InitiativePhaseContainer from '../../containers/InitiativePhaseContainer'\nimport HumanActionPhaseContainer from '../../containers/HumanActionPhaseContainer'\nimport ThreatPhaseContainer from '../../containers/ThreatPhaseContainer'\nimport DemonActionPhaseContainer from '../../containers/DemonActionPhaseContainer'\n\nconst PHASES = {\n  INITIATIVE: InitiativePhaseContainer,\n  HUMAN_ACTION: HumanActionPhaseContainer,\n  THREAT: ThreatPhaseContainer,\n  DEMON_ACTION: DemonActionPhaseContainer,\n}\n\nconst PhaseBody = ({ phase }) => {\n  const BodyComponent = PHASES[phase]\n  return <BodyComponent />\n}\n\nPhaseBody.propTypes = {\n  phase: PropTypes.string.isRequired,\n}\n\nexport default PhaseBody\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { completeDemonActionPhase } from '../../actions'\nimport DemonActionPhase from '../../components/DemonActionPhase'\n\nexport const mapStateToProps = state => ({\n  currentState: state.current,\n})\n\nexport const DemonActionPhaseContainer = ({\n  currentState,\n  completeDemonActionPhase,\n}) => {\n  const {\n    scenarioKey,\n    trogsSupernaturalSpeed,\n    trogsSharpenedClaws,\n    demonsInPlay,\n  } = currentState\n  return (\n    <DemonActionPhase\n      scenarioKey={scenarioKey}\n      trogsSupernaturalSpeed={trogsSupernaturalSpeed}\n      trogsSharpenedClaws={trogsSharpenedClaws}\n      demonsInPlay={demonsInPlay}\n      completeDemonActionPhase={completeDemonActionPhase}\n    />\n  )\n}\n\nDemonActionPhaseContainer.propTypes = {\n  currentState: PropTypes.object.isRequired,\n  completeDemonActionPhase: PropTypes.func.isRequired,\n}\n\nexport default connect(\n  mapStateToProps,\n  { completeDemonActionPhase },\n)(DemonActionPhaseContainer)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Modal, Portal } from 'semantic-ui-react'\n\nclass GameOverButton extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: props.open || false,\n    }\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  render() {\n    const {\n      as: ButtonComponent,\n      currentState,\n      scenarioName,\n      result,\n      ...buttonProps\n    } = this.props\n    const { open } = this.state\n\n    // use a Portal in order to support a Dropdown.Item trigger component\n    return (\n      <Portal\n        open={open}\n        closeOnTriggerClickk={false}\n        openOnTriggerClick\n        trigger={<ButtonComponent {...buttonProps} />}\n        onOpen={this.handleOpen}\n        onClose={this.handleClose}\n      >\n        <Modal open closeOnDimmerClick={false}>\n          <Modal.Header>\n            {result === 'Defeat' && (\n              <span style={{ color: 'red' }}>Maybe next time...</span>\n            )}\n            {result === 'Victory' && (\n              <span style={{ color: 'blue' }}>Congratulations!</span>\n            )}\n          </Modal.Header>\n          <Modal.Content>\n            <div>\n              <p>\n                <strong>Result: </strong>\n                {result}\n              </p>\n              <p>\n                <strong>Scenario: </strong>\n                {scenarioName}\n              </p>\n              <p>\n                <strong>Turn: </strong>\n                {currentState.turn}\n              </p>\n              <p>\n                <strong>Demons: </strong>\n                {currentState.demonsInPlay}\n                {' / '}\n                {currentState.demonsAdded}\n              </p>\n              <p>\n                <strong>Troglodytes: </strong>\n                {currentState.trogsInPlay}\n                {' / '}\n                {currentState.trogsAdded}\n              </p>\n              <p>\n                <strong>Tough Troglodytes: </strong>\n                {currentState.toughTrogsInPlay}\n                {' / '}\n                {currentState.toughTrogsAdded}\n              </p>\n              <p>\n                <strong>Events: </strong>\n                {currentState.eventCount}\n              </p>\n            </div>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button content=\"Close\" onClick={this.handleClose} />\n          </Modal.Actions>\n        </Modal>\n      </Portal>\n    )\n  }\n}\n\nGameOverButton.defaultProps = {\n  as: Button,\n}\n\nGameOverButton.propTypes = {\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  currentState: PropTypes.object.isRequired,\n  scenarioName: PropTypes.string, // eslint-disable-line react/require-default-props\n  result: PropTypes.string.isRequired,\n}\n\nexport default GameOverButton\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dropdown } from 'semantic-ui-react'\nimport RulesSummaryButton from '../RulesSummaryButton'\nimport DemonAISummaryButton from '../DemonAISummaryButton'\nimport GameResultButton from '../GameResultButton'\n\nconst MainMenu = ({\n  currentState,\n  scenarioName,\n  resetGame,\n  undoLastChange,\n  ...divProps\n}) => (\n  <div {...divProps}>\n    <div style={{ float: 'right' }}>\n      <Dropdown icon=\"bars\" direction=\"left\" style={{ color: 'white' }}>\n        <Dropdown.Menu>\n          <Dropdown.Item icon=\"refresh\" text=\"Restart\" onClick={resetGame} />\n          <Dropdown.Item icon=\"undo\" text=\"Undo\" onClick={undoLastChange} />\n          <Dropdown.Divider />\n          <RulesSummaryButton icon=\"book\" text=\"Rules\" as={Dropdown.Item} />\n          <DemonAISummaryButton icon=\"bug\" text=\"Demon AI\" as={Dropdown.Item} />\n          <Dropdown.Divider />\n          <GameResultButton\n            icon=\"thumbs up outline\"\n            text=\"Victory\"\n            as={Dropdown.Item}\n            currentState={currentState}\n            scenarioName={scenarioName}\n            result=\"Victory\"\n          />\n          <GameResultButton\n            icon=\"thumbs down outline\"\n            text=\"Defeat\"\n            as={Dropdown.Item}\n            currentState={currentState}\n            scenarioName={scenarioName}\n            result=\"Defeat\"\n          />\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  </div>\n)\n\nMainMenu.propTypes = {\n  currentState: PropTypes.object.isRequired,\n  scenarioName: PropTypes.string, // eslint-disable-line react/require-default-props\n  resetGame: PropTypes.func.isRequired,\n  undoLastChange: PropTypes.func.isRequired,\n}\n\nexport default MainMenu\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container } from 'semantic-ui-react'\nimport GameSummaryContainer from '../../containers/GameSummaryContainer'\nimport EventMessageContainer from '../../containers/EventMessageContainer'\nimport Welcome from '../Welcome'\nimport PhaseHeader from '../PhaseHeader'\nimport PhaseBody from '../PhaseBody'\nimport MainMenu from '../MainMenu'\n\nconst MainApp = ({\n  currentState,\n  scenarioName,\n  startGame,\n  resetGame,\n  undoLastChange,\n}) => (\n  <Container>\n    <div\n      style={{\n        maxWidth: '352px',\n        margin: '0 auto',\n        background: 'white',\n        marginTop: '10px',\n      }}\n    >\n      <img\n        src=\"images/title.png\"\n        alt=\"Claustrophobia\"\n        style={{ width: '352px', height: '128px' }}\n      />\n\n      <MainMenu\n        style={{\n          position: 'absolute',\n          zIndex: '1000',\n          top: '110px',\n          width: '352px',\n        }}\n        currentState={currentState}\n        scenarioName={scenarioName}\n        resetGame={resetGame}\n        undoLastChange={undoLastChange}\n      />\n      {!!scenarioName && (\n        <div\n          style={{\n            position: 'absolute',\n            left: '50%',\n            top: '115px',\n            zIndex: '1000',\n          }}\n        >\n          <div\n            style={{\n              position: 'relative',\n              left: '-50%',\n            }}\n          >\n            <strong>{scenarioName}</strong>\n          </div>\n        </div>\n      )}\n\n      <div style={{ padding: '5px 10px 10px 10px' }}>\n        {!scenarioName && <Welcome startGame={startGame} />}\n        {!!scenarioName && (\n          <div>\n            <PhaseHeader phase={currentState.phase} />\n            <EventMessageContainer />\n            <PhaseBody phase={currentState.phase} />\n            <GameSummaryContainer />\n          </div>\n        )}\n      </div>\n    </div>\n  </Container>\n)\n\nMainApp.propTypes = {\n  currentState: PropTypes.object.isRequired,\n  scenarioName: PropTypes.string, // eslint-disable-line react/require-default-props\n  startGame: PropTypes.func.isRequired,\n  resetGame: PropTypes.func.isRequired,\n  undoLastChange: PropTypes.func.isRequired,\n}\n\nexport default MainApp\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { startGame, resetGame, undoLastChange } from '../../actions'\nimport MainApp from '../../components/MainApp'\nimport { SCENARIOS } from '../../config'\n\nexport const mapStateToProps = state => ({\n  currentState: state.current,\n})\n\nexport const MainAppContainer = ({\n  currentState,\n  startGame,\n  resetGame,\n  undoLastChange,\n}) => {\n  const scenarioName = (SCENARIOS[currentState.scenarioKey] || {}).name\n  return (\n    <MainApp\n      currentState={currentState}\n      scenarioName={scenarioName}\n      startGame={startGame}\n      resetGame={resetGame}\n      undoLastChange={undoLastChange}\n    />\n  )\n}\n\nMainAppContainer.propTypes = {\n  currentState: PropTypes.object.isRequired,\n  startGame: PropTypes.func.isRequired,\n  resetGame: PropTypes.func.isRequired,\n  undoLastChange: PropTypes.func.isRequired,\n}\n\nexport default connect(\n  mapStateToProps,\n  { startGame, resetGame, undoLastChange },\n)(MainAppContainer)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nfunction register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nfunction unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n\nexport { register, unregister }\n","import {\n  CHANGE_GAME_STATE,\n  RESET_GAME_STATE,\n  UNDO_LAST_CHANGE,\n} from '../actions'\n\nexport const initialState = {\n  current: {\n    scenarioKey: null,\n    turn: 0,\n    phase: null,\n    demonsInPlay: 0,\n    demonsAdded: 0,\n    trogsInPlay: 0,\n    trogsAdded: 0,\n    toughTrogsInPlay: 0,\n    toughTrogsAdded: 0,\n    demonDice: 6,\n    threatDice: 6,\n    threatRoll: 0,\n    threatStep: null,\n    eventCount: 0,\n    eventRequired: false,\n    legalPlacement: false,\n    trogsFar: false,\n    trogsClose: false,\n    trogsSupernaturalSpeed: false,\n    trogsSharpenedClaws: false,\n    oilForYourLamp: false,\n    upcomingEvent: null,\n  },\n  history: [],\n}\n\nconst reducer = (state = initialState, action) => {\n  const { current, history } = state\n\n  switch (action.type) {\n    case CHANGE_GAME_STATE:\n      return {\n        current: { ...current, ...action.payload },\n        history: [...history, current],\n      }\n    case RESET_GAME_STATE:\n      return {\n        current: initialState.current,\n        history: [...history, current],\n      }\n    case UNDO_LAST_CHANGE:\n      return {\n        current: history[history.length - 1],\n        history: history.slice(0, history.length - 1),\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducer, { initialState } from './reducer'\n\nconst middleware = [thunk]\nconst store = createStore(reducer, initialState, applyMiddleware(...middleware))\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport MainAppContainer from './containers/MainAppContainer'\nimport * as serviceWorker from './serviceWorker'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <MainAppContainer />\n  </Provider>,\n  document.getElementById('root'), // eslint-disable-line no-undef\n)\n\nserviceWorker.register()\n"],"sourceRoot":""}